{"version":3,"sources":["components/resources/profile_pictures/default_profile_picture.png","components/Help.js","components/NavBar.js","components/Theme.js","components/PostSucceed.js","components/CreatePost.js","components/ChangePage.js","components/Post.js","components/MainPage.js","components/InvalidNewUserError.js","components/RegisterSucceed.js","components/Register.js","components/GetPasswordDialog.js","components/Login.js","components/User.js","components/PostContent.js","routing/routing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Transition","props","react_default","a","createElement","index_es","Object","assign","direction","HelpView","state","open","handleOpen","_this","setState","handleClose","this","TransitionComponent","onClose","onClick","color","React","Component","NavBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","closeDrawer","helpChild","createRef","page","navigate","_this2","className","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","Menu_default","ChangeView","updateClickedUsername","user","src","url","email","alt","onError","e","target","onerror","img","tabIndex","role","width","button","key","Home_default","primary","AssignmentInd_default","current","HelpOutline_default","Help_HelpView","ref","createMuiTheme","palette","main","secondary","typography","h4","fontWeight","fontSize","h5","PostSucceedView","handleCreatePostClose","errInfo","type","CreatePost","handleEventChange","field","event","oldData","value","newUserData","error","postTitle","postContent","username","checkPostAndPost","bind","assertThisInitialized","postSucceedChild","getUsername","data","request","Request","method","headers","Headers","Content-Type","body","JSON","stringify","fetch","then","response","json","item","userName","date","Date","postID","Math","random","toString","substr","title","content","postTime","toISOString","slice","replace","_this3","PostSucceed_PostSucceedView","required","label","variant","onChange","name","rows","cols","wrap","ChangePageView","pageNum","Number","totalPages","choosePage","handleCloseForCancel","margin","InputLabelProps","shrink","Post","posts","numOfPosts","currentPage","numOfPages","currentShownPosts","buttons","getPosts","getPageButtons","updateCurrentPosts","updataPosts","changePageChild","clickedUsername","items","length","ceil","i","post","b","index","action","ChangePage_ChangePageView","map","userEmail","Button","size","updateClickedPost","substring","num","MainPage","handleCreatePostOpen","createPost","showPosts","logout","container","justify","spacing","sm","CreatePost_CreatePost","Post_Post","align","gutterBottom","InvalidNewUserErrorView","RegisterSucceedView","Register","handleClickShowPassword","showPassword","password","confirmPassword","erroInfo","addNewAccount","checkUserInfoAndAdd","existUsername","existEmail","invalidNewUserErrorChild","registerSucceedChild","userID","catch","err","console","log","exist","itemInd","preventDefault","InvalidNewUserError_InvalidNewUserErrorView","RegisterSucceed_RegisterSucceedView","onSubmit","InputProps","endAdornment","InputAdornment_default","edge","VisibilityOff_default","Visibility_default","GetPasswordDialogView","invalidEmail","sendEmainEnable","currentState","validateEmail","sendEmail","handleSubmit","getUserInfo","disableSendEmailBtn","sixtySec","test","String","toLowerCase","time","setTimeout","message","axios","msg","alert","result","disabled","userData","login","existEmailAndPasswordCorrect","checkUserInfoAndLogin","onSuccess","GetPasswordChild","each","GetPasswordDialog_GetPasswordDialogView","User","oldPasswordRequire","usernameUnique","passwordError","confirmPasswordError","newPassword","newPasswordError","oldPassword","handleEventChangeForPicture","picture","files","uploadPicture","asyncToGenerator","regenerator_default","mark","_callee","formData","_context","prev","next","FormData","append","content-type","stop","errorInfo","updateUserInfo","pictureID","Password","accept","PostContent","clickedPost","RouterMixin","require","RoutedApp","createReactClass","displayName","getInitialState","loggedIn","mixins","routes","/","/register","/login","/user","/postContent","render","renderCurrentRoute","home","MainPage_MainPage","register","Register_Register","Login_Register","User_User","PostContent_PostContent","notFound","path","App","sessionStorage","getItem","setItem","removeItem","styles","theme","NavBar_NavBar","routing","history","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25c882cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default_profile_picture.b790abbf.png\";","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Help view\n */\nexport default class HelpView extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle>\n                        Help/About\n                    </DialogTitle>\n                    <DialogContent>\n                        <b>Help: </b>\n                        <br /> <br />\n                        <b>Each user needs to log in before posting his idea. New users need to sign up first and then go to log in.</b>\n                        <br /> <br />\n                        <b>After updating your profile picture, you can see your new profile picture by relogining the account.</b>\n                        <br /> <br />\n                        <b>About: </b>\n                        <br /> <br />\n                        <b>Wise-Vizs uses forums, as a place for users to socially interact.</b>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Ok</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport OrganizerIcon from '@material-ui/icons/AssignmentInd';\nimport VoteIcon from '@material-ui/icons/HowToVote';\nimport { navigate } from 'react-mini-router';\nimport { Drawer, ListItemIcon, Button, ListItemText, ListItem, Divider } from '@material-ui/core';\nimport img from './resources/profile_pictures/default_profile_picture.png';\n\nimport './component_style/NavBar.css';\nimport HelpView from './Help';\n\n/**\n * The NavBar contains the top AppBar as well as the navigation Drawer on\n * the left side, activated by the hamburger menu icon\n */\nexport default class NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n\n        this.helpChild = React.createRef();\n    }\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    toggleDrawer = () => this.setState({ open: !this.state.open });\n    closeDrawer = () => this.setState({open: false});\n\n    render() {\n\n        return (\n            <div className=\"root\">\n                <AppBar position=\"static\" >\n                    <Toolbar>\n                        <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer}>\n                            <MenuIcon />\n                        </IconButton>\n                        <div className=\"layout\">\n                            <div className=\"titleAndHome\">\n                                <h2 className=\"title\">Wise-Vizs</h2>\n                                <Button color=\"inherit\" onClick={() => {\n                                    this.ChangeView('/');\n                                    this.props.updateClickedUsername('');\n                                }}>Home</Button>\n                            </div>\n                            <div className=\"accountFormat\">\n                                { this.props.user !== null && (\n                                    <img className=\"roundedCircleArticleImgNavBar\"\n                                        src={\"http://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\"\n                                            + this.props.user.email + '/' + this.props.user.email + \".jpg\"}\n                                        alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                                    </img>\n                                )}\n                                <Button color=\"inherit\" className=\"account\" onClick={() => {\n                                    if (this.props.user == null) {\n                                        this.ChangeView('/login');\n                                    } else {\n                                        this.ChangeView('/user');\n                                    }\n                                }}>Account</Button>\n                            </div>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={this.state.open} onClose={this.closeDrawer}>\n                    <div tabIndex={0} role=\"button\" onClick={this.closeDrawer}>\n                        <div width=\"250\">\n                            <ListItem button key='Home' onClick={() => {\n                                this.ChangeView('/');\n                                this.props.updateClickedUsername('');\n                            }} >\n                                <ListItemIcon><HomeIcon /></ListItemIcon>\n                                <ListItemText primary='Home' />\n                            </ListItem>\n                            <ListItem button key='Account' onClick={() => {\n                                if (this.props.user == null) {\n                                    this.ChangeView('/login');\n                                } else {\n                                    this.ChangeView('/user');\n                                }\n                            }} >\n                                <ListItemIcon><OrganizerIcon /></ListItemIcon>\n                                <ListItemText primary='Account' />\n                            </ListItem>\n                            <Divider />\n                            <ListItem button key='Help' onClick={() => this.helpChild.current.handleOpen()}>\n                                <ListItemIcon><HelpOutlineIcon /></ListItemIcon>\n                                <ListItemText primary='Help' />\n                            </ListItem>\n                        </div>\n                    </div>\n                </Drawer>\n                <HelpView ref={this.helpChild} />\n            </div>\n        );\n    }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n/**\n * Check out https://material-ui.com/customization/themes/ to\n * learn how theming works in Material UI.  I set up this basic\n * theme to use colors similar to our logo colors, but this can\n * be changed easily later\n */\nexport default createMuiTheme({\n    palette: {\n        primary: {main: '#3949ab'},\n        secondary: {main: '#7986cb'}\n    },\n    typography: {\n        h4: {\n            fontWeight: 500,\n            fontSize: 30,\n        },\n        h5: {\n            fontSize: 25,\n        }\n    },\n});\n","import React from 'react';\nimport { Dialog, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Invalid new user password or user name view\n */\nexport default class PostSucceedView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            errInfo: ''\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.props.handleCreatePostClose();\n        this.setState({ open: false });\n    };\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition}>\n                    <DialogContent>\n                        <br />\n                        <b>Post successfully ^_^!</b>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\" type=\"Button\">Ok</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/MainPage.css';\nimport PostSucceedView from './PostSucceed';\n\n/**\n *\n *\n */\nexport default class CreatePost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            postTitle: '',\n            postContent: '',\n            username: '',\n            error: false,\n        }\n        this.checkPostAndPost = this.checkPostAndPost.bind(this);\n        this.postSucceedChild = React.createRef();\n        this.getUsername = this.getUsername.bind(this);\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n            error: false,\n        });\n    }\n\n    getUsername() {\n        let data = { email: this.props.user.email};\n        let request = new Request('api/user-info/get-username', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        fetch(request)\n            .then(response => response.json())\n            .then(item => {\n                this.setState({ username:item[0].userName })\n            });\n    }\n\n    componentDidMount() {\n        this.getUsername();\n    }\n\n    checkPostAndPost() {\n        if (this.state.postTitle === '') {\n            this.setState({ error:true });\n        } else {\n            let date = new Date();\n            let data = {\n                postID: Math.random().toString(36).substr(2, 9),\n                title: this.state.postTitle,\n                content: this.state.postContent,\n                postTime: date.toISOString().slice(0, 19).replace('T', ' '),\n                email: this.props.user.email,\n                username: this.state.username,\n                url: this.props.user.url,\n            };\n            let request = new Request('api/post-info/post', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n\n            fetch(request)\n                .then(function(response) {\n                    response.json().then(function(data) {\n                    })\n            });\n            this.postSucceedChild.current.handleOpen();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <PostSucceedView ref={this.postSucceedChild} handleCreatePostClose={this.props.handleCreatePostClose.bind(this)}/>\n                <form className=\"grid\">\n                    <fieldset className=\"fieldset\">\n                        <legend>\n                            New Post\n                        </legend>\n                        <h2>Post Title:</h2>\n                        <TextField\n                            required\n                            error={this.state.error}\n                            label=\"Post Title\"\n                            variant=\"outlined\"\n                            value={this.state.postTitle}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('postTitle')}\n                        />\n                        <br />\n                        <h2>Content:</h2>\n                        <textarea\n                            name=\"message\"\n                            className=\"textarea\"\n                            rows=\"10\"\n                            cols=\"30\"\n                            wrap=\"soft\"\n                            value={this.state.postContent}\n                            onChange={this.handleEventChange('postContent')}\n                        >\n                        </textarea>\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" onClick={() => this.props.handleCreatePostClose()}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={this.checkPostAndPost}>Post</Button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Dialog, DialogContent, DialogActions, Button, Slide, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Invalid new user password or user name view\n */\nexport default class ChangePageView extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            pageNum: '',\n            error: false,\n        };\n    }\n\n    handleEventChange = field => event => {\n        let page = event.target.value;\n        this.setState({\n            pageNum: page,\n        });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        let page = Number(this.state.pageNum);\n        if (page < 1 || page > this.props.totalPages) {\n            this.setState({ pageNum: '', error: true });\n        } else {\n            this.props.choosePage(page);\n            this.setState({ open: false, error: false, pageNum: '' });\n        }\n    };\n\n    handleCloseForCancel = () => {\n        this.setState({ open: false, error: false, pageNum: '' });\n    }\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogContent className=\"changePageD\">\n                        <br />\n                        <b>Skip to page </b>\n                        <TextField\n                            required\n                            error={this.state.error}\n                            label=\"(Page Number)\"\n                            margin=\"dense\"\n                            className=\"pageNumTextField\"\n                            type=\"number\"\n                            value={this.state.pageNum}\n                            onChange={this.handleEventChange('pageNum')}\n                            InputLabelProps={{ shrink: true }}\n                        />\n                        { this.state.error && (\n                            <p className=\"error\">Error: Please enter a number between 1 and {this.props.totalPages}.</p>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Ok</Button>\n                        <Button onClick={this.handleCloseForCancel} color=\"secondary\">Cancel</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/MainPage.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport { navigate } from 'react-mini-router';\nimport ChangePageView from './ChangePage';\n\nexport default class Post extends React.Component {\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            numOfPosts: 0,\n            currentPage: 1,\n            numOfPages: 0,\n            currentShownPosts: [],\n            buttons: [],\n        }\n        this.getPosts = this.getPosts.bind(this);\n        this.getPageButtons = this.getPageButtons.bind(this);\n        this.updateCurrentPosts = this.updateCurrentPosts.bind(this);\n        this.updataPosts = this.updataPosts.bind(this);\n        this.changePageChild = React.createRef();\n    }\n\n    componentDidMount() {\n        this.getPosts();\n    }\n\n    getPosts() {\n\n        let data = { username:this.props.clickedUsername };\n        let request = '';\n\n        if (this.props.clickedUsername === '') {\n            request = new Request('api/post-info/get')\n\n        } else {\n            request = new Request('api/post-info/get-click-user-post', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n        }\n        fetch(request)\n                .then(response => response.json())\n                .then(items => this.setState({ posts:items }))\n                .then(() => {\n                    let numOfPosts = this.state.posts.length;\n                    let numOfPages = Math.ceil(numOfPosts / 3);\n                    if (numOfPages === 0) {\n                        numOfPages = 1;\n                    }\n                    let currentShownPosts = [];\n                    for (let i = 3 * (this.state.currentPage - 1); i < 3 * this.state.currentPage && i < numOfPosts; i++) {\n                        let post = this.state.posts[i];\n                        currentShownPosts[i] = post;\n                    }\n                    this.setState({\n                        numOfPosts: numOfPosts,\n                        numOfPages: numOfPages,\n                        currentShownPosts: currentShownPosts,\n                    });\n                    this.getPageButtons();\n                });\n    }\n\n    updataPosts(b) {\n        let currentShownPosts = [];\n        for (let i = 3 * (b - 1); i < 3 * b && i < this.state.numOfPosts; i++) {\n            let post = this.state.posts[i];\n            currentShownPosts[i] = post;\n        }\n        this.setState({\n            currentShownPosts: currentShownPosts,\n        });\n        this.getPageButtons(b);\n    }\n\n    updateCurrentPosts(b) {\n        this.setState({ currentPage:b });\n        this.updataPosts(b);\n    }\n\n    getPageButtons(b) {\n        if (b == null) {\n            b = 1;\n        }\n        let totalPages = this.state.numOfPages;\n        let currentPage = b;\n        let buttons = [];\n        buttons[0] = 1;\n        let index = 1;\n        for (let i = currentPage - 2 > 1 ? currentPage - 2 : 2 ; i <= currentPage + 2 && i <= totalPages; i++) {\n            if (buttons[index - 1] + 1 !== i) {\n                buttons[index] = '...';\n                index++;\n            }\n            buttons[index] = i;\n            index++;\n        }\n        if (buttons[index - 1] !== totalPages) {\n            if (buttons[index - 1] !== totalPages - 1) {\n                buttons[index] = '...';\n                buttons[index + 1] = totalPages;\n            } else {\n                buttons[index] = totalPages;\n            }\n        }\n        this.setState({ buttons:buttons });\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"grid\" method=\"post\" action=\"\">\n                    <br/>\n                    <ChangePageView ref={this.changePageChild} choosePage={this.updateCurrentPosts} totalPages={this.state.numOfPages} />\n                    {this.state.currentShownPosts.map((post, index) => (\n                        <article className=\"postArticle\" key={index}>\n                            <fieldset className=\"postFieldset\">\n                                <div className=\"userInfoDiv\">\n                                    <img className=\"roundedCircleArticleImg\"\n                                        src={post.url ? \"http://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + post.url + \"/profile_picture/\"\n                                            + post.userEmail + '/' + post.userEmail + \".jpg\" : img}\n                                        alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                                    </img>\n                                    <div className=\"postContentLayout\">\n                                        <div className=\"postProfile\">\n                                            <Button className=\"userInfoPUsername\" onClick={() => {\n                                                    this.props.updateClickedUsername(post.username);\n                                                }}>{post.username}</Button>\n                                            <p className=\"userInfoP\">| {post.postTime}</p>\n                                        </div>\n                                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                                        <h2 className=\"h2ForPostTitle\"><Button className=\"postTitle\" onClick={() => {\n                                            this.props.updateClickedPost(post);\n                                            this.ChangeView('/postContent');\n                                        }}>{post.title.length > 50 ? post.title.substring(0, 30) + '...' : post.title}</Button></h2>\n                                        <p className=\"postContent\">{post.content.length > 200 ? post.content.substring(0, 350) + '...' : post.content}</p>\n                                    </div>\n                                </div>\n                            </fieldset>\n                            <br/>\n                        </article>\n                    ))}\n                </form>\n                <div className=\"pageButtons\">\n                    {this.state.buttons.map((b, index) => {\n                        if (b === this.state.currentPage) {\n                            return (<Button className=\"currentPageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                        else if (b === '...') {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.changePageChild.current.handleOpen()}>{b}</Button>)\n                        }\n                        else {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Typography, Button, ListItem, Grid } from '@material-ui/core';\nimport {  } from 'react-bootstrap'\nimport './component_style/MainPage.css';\nimport { navigate } from 'react-mini-router';\nimport CreatePostView from './CreatePost';\nimport Post from './Post';\nimport HelpView from './Help';\n\n\n/**\n * Main View, just contains buttons for navigating to organizer and voting\n * views.\n * TODO: Clean up the button styling a bit\n */\nexport default class MainPage extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            createPost: false,\n            showPosts: true,\n        }\n        this.helpChild = React.createRef();\n        this.handleCreatePostOpen =  this.handleCreatePostOpen.bind(this);\n        this.handleCreatePostClose = this.handleCreatePostClose.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    handleCreatePostOpen = () => {\n        this.setState({\n            createPost: true,\n            showPosts: false,\n        });\n    }\n\n    handleCreatePostClose = () => {\n        this.setState({\n            createPost: false,\n            showPosts: true,\n        });\n    }\n\n    logout = () => {\n        this.props.logout();\n        this.handleCreatePostClose();\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <br />\n\n                { this.props.clickedUsername === '' && (\n                    <Grid container justify=\"center\" spacing={24}>\n                        <HelpView ref={this.helpChild} />\n                        <Grid item sm={7}>\n                            {\n                                this.state.createPost === true && (\n                                    <CreatePostView user={this.props.user} handleCreatePostClose={this.handleCreatePostClose}/>\n                                )\n                            }\n                            {\n                                this.state.showPosts === true && (\n                                    <Post updateClickedUsername={this.props.updateClickedUsername} clickedUsername={this.props.clickedUsername} updateClickedPost={this.props.updateClickedPost}/>\n                                )\n                            }\n                        </Grid>\n                        <Grid item sm={3}>\n                            <br/>\n                            <fieldset className=\"fieldset\">\n                                {\n                                    this.props.user == null && (\n                                        <Grid container justify=\"center\">\n                                            <Typography variant=\"h5\" align=\"center\" gutterBottom>Welcome to Wise-Vizs!</Typography>\n                                            <div className=\"buttons\">\n                                                <ListItem>\n                                                    <Button variant=\"contained\" color=\"primary\" className=\"buttons\" onClick={() => {\n                                                        this.ChangeView('/login');\n                                                    }}>Log in</Button>\n                                                </ListItem>\n\n                                                <ListItem>\n                                                    <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={ () => {\n                                                        this.ChangeView('/register');\n                                                    }}>Sign Up</Button>\n                                                </ListItem>\n                                            </div>\n                                        </Grid>\n                                    )\n                                }\n                                {\n                                    this.props.user != null && (\n                                        <Grid container justify=\"center\">\n                                            <div>\n                                                <ListItem>\n                                                    <Typography variant=\"h5\" align=\"center\" gutterBottom>You're here, {this.props.user.username}!</Typography>\n                                                </ListItem>\n\n                                                <ListItem>\n                                                    <Button variant=\"contained\" color=\"primary\" className=\"buttons\" onClick={() => this.handleCreatePostOpen()}>Create Post</Button>\n                                                </ListItem>\n\n                                                <ListItem>\n                                                    <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={() => this.logout()}>Logout</Button>\n                                                </ListItem>\n                                            </div>\n                                        </Grid>\n                                    )\n                                }\n                                <p className=\"help\" align=\"center\" onClick={() => this.helpChild.current.handleOpen()}>About Wise-Vizs</p>\n                            </fieldset>\n                        </Grid>\n                    </Grid>\n                )}\n\n                {this.props.clickedUsername !== '' && (\n                    <Grid container justify=\"center\">\n                        <Grid item sm={8}>\n                            <h1 className=\"userPostTitle\">{this.props.clickedUsername} 's posts</h1>\n                            <Post updateClickedUsername={this.props.updateClickedUsername} clickedUsername={this.props.clickedUsername} updateClickedPost={this.props.updateClickedPost}/>\n                        </Grid>\n                    </Grid>\n                )}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Invalid new user password or user name view\n */\nexport default class InvalidNewUserErrorView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            errInfo: ''\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle>\n                        Error information:\n                    </DialogTitle>\n                    <DialogContent>\n                        <br />\n                        <b>{this.props.errInfo}</b>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Ok</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Dialog, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\nimport { navigate } from 'react-mini-router';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Invalid new user password or user name view\n */\nexport default class RegisterSucceedView extends React.Component {\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            errInfo: ''\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.ChangeView('/');\n    };\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogContent>\n                        <br />\n                        <b>Congratulation! You have your own account. Please go to login page to login ^_^!</b>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Ok</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport RegisterSucceedView from './RegisterSucceed';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n/**\n *\n *\n */\nexport default class Register extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newUserData: {\n                userName: '',\n                email: '',\n                password: '',\n                confirmPassword: '',\n                erroInfo: ''\n            },\n            items: [],\n            showPassword: false,\n        };\n        this.addNewAccount = this.addNewAccount.bind(this);\n        this.checkUserInfoAndAdd = this.checkUserInfoAndAdd.bind(this);\n        this.existUsername = this.existUsername.bind(this);\n        this.existEmail = this.existEmail.bind(this);\n        this.invalidNewUserErrorChild = React.createRef();\n        this.registerSucceedChild = React.createRef();\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.newUserData;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    componentDidMount() {\n    }\n\n    // go to database to check whether the account has been registered and\n    // go to check whether the password and reentered password are same\n    // if the new account information are all valid, then put the info into DB.\n    checkUserInfoAndAdd() {\n        let data = {\n            userName: this.state.newUserData.userName,\n            email: this.state.newUserData.email\n        };\n        let request = new Request('api/user-info/check-username-email-unique', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(items => this.setState({items}))\n            .then((event) => {\n                let data = {\n                    userID: Math.random().toString(36).substr(2, 9),\n                    userName: this.state.newUserData.userName,\n                    password: this.state.newUserData.password,\n                    email: this.state.newUserData.email,\n                };\n                let confirmPassword = this.state.newUserData.confirmPassword;\n                if (confirmPassword === data.password && !this.existUsername(data.userName)\n                    && !this.existEmail(data.email)) {\n                    let request = new Request('api/user-info/post', {\n                        method: 'POST',\n                        headers: new Headers({ 'Content-Type': 'application/json' }),\n                        body: JSON.stringify(data)\n                    });\n\n                    fetch(request)\n                        .then(function(response) {\n                            response.json().then(function(data) {\n                            })\n                    });\n                    this.registerSucceedChild.current.handleOpen();\n                } else {\n                    let erroInfo = '';\n                    if (data.userName === '') {\n                        erroInfo = 'Username cannot be empty!';\n                    }\n                    else if (this.existUsername(data.userName)) {\n                        erroInfo = 'The username is registered by the other person!';\n                    }\n                    else if (this.existEmail(data.email)) {\n                        erroInfo = 'The email is used by the other person!';\n                    }\n                    else if (data.password !== data.confirmPassword) {\n                        erroInfo = 'The password and the reentered Password are different!';\n                    }\n                    this.setState({ newUserData: {\n                        userName: data.userName,\n                        password: data.password,\n                        confirmPassword: confirmPassword,\n                        email: data.email,\n                        erroInfo: erroInfo\n                    }});\n                    this.invalidNewUserErrorChild.current.handleOpen();\n                    this.setState({ newUserData: {\n                        userName: '',\n                        password: '',\n                        confirmPassword: '',\n                        email: '',\n                        erroInfo: this.state.newUserData.erroInfo\n                    }});\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    existUsername(username) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.userName === username) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    existEmail(email) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.email === email) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    addNewAccount(event) {\n        event.preventDefault();\n        this.checkUserInfoAndAdd();\n    }\n\n    render() {\n        return (\n            <div className=\"newUser\">\n                <br />\n                <InvalidNewUserView ref={this.invalidNewUserErrorChild} errInfo={this.state.newUserData.erroInfo}/>\n                <RegisterSucceedView ref={this.registerSucceedChild}/>\n                <h2 className=\"title\" align=\"center\">New User</h2>\n                <br />\n                <form className=\"eventForm\" onSubmit={this.addNewAccount}>\n                    <TextField\n                        required\n                        label=\"User Name\"\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.userName}\n                        onChange={this.handleEventChange('userName')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Email\"\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        type=\"email\"\n                        value={this.state.newUserData.email}\n                        onChange={this.handleEventChange('email')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.password}\n                        onChange={this.handleEventChange('password')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Confirm Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.confirmPassword}\n                        onChange={this.handleEventChange('confirmPassword')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={() => this.ChangeView('/')}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Register\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Slide, TextField } from '@material-ui/core';\nimport { navigate } from 'react-mini-router';\nimport './component_style/Register.css';\nimport axios from 'axios';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n/**\n * Invalid new user password or user name view\n */\nexport default class GetPasswordDialogView extends React.Component {\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            email: '',\n            invalidEmail: false,\n            item: [],\n            sendEmainEnable: false,\n            currentState: \"Send Email\",\n        };\n        this.validateEmail = this.validateEmail.bind(this);\n        this.sendEmail = this.sendEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.getUserInfo = this.getUserInfo.bind(this);\n        this.disableSendEmailBtn = this.disableSendEmailBtn.bind(this);\n        this.sixtySec = this.sixtySec.bind(this);\n    }\n\n    handleEventChange = () => event => {\n        this.setState({\n            email: event.target.value,\n            invalidEmail: false,\n        });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    validateEmail (email) {\n        let re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    disableSendEmailBtn () {\n        this.setState({sendEmainEnable: true});\n        let countdown = 30;\n        this.sixtySec(countdown);\n    }\n\n    sixtySec (time) {\n        if (time > 0) {\n            setTimeout(this.sixtySec, 1000, time - 1);\n            this.setState({ currentState:'Resend Email (' + time + ')' });\n        } else {\n            this.setState({ currentState:'Resend Email' });\n            this.setState({sendEmainEnable: false });\n        }\n    }\n\n    getUserInfo() {\n        let data = {\n            email: this.state.email\n        };\n        let request = new Request('api/user-info/check-email', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(item => this.setState({item}))\n            .then(() => this.handleSubmit(this.state.email, this.state.item))\n            .catch(err => console.log(err));\n    }\n\n    handleSubmit(email, user){\n        const message = 'Hi, ' + user[0].userName + '\\n \\nYour password: '\n            + user[0].password + '\\nHave a good day with Wise-Viz. ^_^'\n            + '\\n \\nBest, \\n \\nWise-Viz';\n        this.disableSendEmailBtn();\n        axios({\n            method: \"POST\",\n            url:\"send\",\n            data: {\n                email: email,\n                message: message\n            }\n        }).then((response)=>{\n            if (response.data.msg === 'success'){\n                alert(\"Message Sent.\");\n            }else if(response.data.msg === 'fail'){\n                alert(\"Message failed to send.\")\n            }\n        })\n    }\n\n    sendEmail () {\n        let email = this.state.email;\n        let result = this.validateEmail(email);\n        if (!result) {\n            this.setState({ invalidEmail:!result });\n        } else {\n            this.getUserInfo();\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle>\n                        Get Back Password\n                    </DialogTitle>\n                    <DialogContent>\n                        <br />\n                        <p>Please enter the user email to get back the password.</p>\n                        <form className=\"sendEmail\">\n                            <TextField\n                                error={this.state.invalidEmail}\n                                label={this.state.invalidEmail ? \"The email is invalid!\" : \"User Email\"}\n                                margin=\"dense\"\n                                className=\"registerText\"\n                                value={this.state.email}\n                                onChange={this.handleEventChange()}\n                                InputLabelProps={{ shrink: true }}\n                            />\n                            <Button\n                                onClick={() => this.sendEmail()}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                disabled={this.state.sendEmainEnable}\n                                >{this.state.currentState}</Button>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Go Back</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport GetPasswordDialogView from './GetPasswordDialog';\n\n/**\n *\n *\n */\nexport default class Register extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                email: '',\n                password: '',\n                erroInfo: ''\n            },\n            items: [],\n            showPassword: false,\n        };\n        this.login = this.login.bind(this);\n        this.existEmailAndPasswordCorrect = this.existEmailAndPasswordCorrect.bind(this);\n        this.invalidNewUserErrorChild = React.createRef();\n        this.checkUserInfoAndLogin = this.checkUserInfoAndLogin.bind(this);\n        this.onSuccess = this.onSuccess.bind(this);\n        this.GetPasswordChild = React.createRef();\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    onSuccess(email, username, password, url) {\n        this.props.onSuccess(email, username, password, url);\n        this.ChangeView('/');\n    }\n\n    componentDidMount() {\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    checkUserInfoAndLogin() {\n        let data = {\n            email: this.state.userData.email\n        };\n        let request = new Request('api/user-info/check-email', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(items => this.setState({items}))\n            .then((event) => {\n                let data = {\n                    email: this.state.userData.email,\n                    password: this.state.userData.password\n                };\n                if (this.existEmailAndPasswordCorrect(data.email, data.password)) {\n                    this.onSuccess(data.email, this.state.items[0].userName, this.state.items[0].password, this.state.items[0].url);\n                } else {\n                    let erroInfo = '';\n                    if (data.userName === '') {\n                        erroInfo = 'Email cannot be empty!';\n                    }\n                    else {\n                        erroInfo = 'The email is not exist or the password is incorrect!';\n                    }\n                    this.setState({ userData: {\n                        email: data.email,\n                        password: data.password,\n                        erroInfo: erroInfo\n                    }});\n                    this.invalidNewUserErrorChild.current.handleOpen();\n                    this.setState({ userData: {\n                        email: '',\n                        password: '',\n                        erroInfo: this.state.userData.erroInfo\n                    }});\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    existEmailAndPasswordCorrect(email, password) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.email === email && each.password === password) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    login(event) {\n        event.preventDefault();\n        this.checkUserInfoAndLogin();\n    }\n\n    render() {\n        return (\n            <div className=\"newUser\">\n                <InvalidNewUserView ref={this.invalidNewUserErrorChild} errInfo={this.state.userData.erroInfo}/>\n                <GetPasswordDialogView ref={this.GetPasswordChild}/>\n                <br />\n                <h2 className=\"title\" align=\"center\">Log In</h2>\n                <br />\n                <form className=\"eventForm\" onSubmit={this.login}>\n                    <TextField\n                        required\n                        label=\"User Email\"\n                        margin=\"dense\"\n                        type=\"email\"\n                        className=\"registerText\"\n                        value={this.state.userData.email}\n                        onChange={this.handleEventChange('email')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.userData.password}\n                        onChange={this.handleEventChange('password')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={() => this.ChangeView('/')}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Login\n                    </Button>\n                    <br />\n                    <p className=\"forgetPassword\" onClick={() => this.GetPasswordChild.current.handleOpen()}>Forget password?</p>\n                    <p className=\"forgetPassword\" onClick={() => this.ChangeView('/register')}>Sign Up</p>\n                </form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Button, TextField, IconButton } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'axios';\n\n/**\n *\n *\n */\nexport default class User extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                username: '',\n                oldPassword: '',\n                newPassword: '',\n                confirmPassword: '',\n            },\n            item: [],\n            showPassword: false,\n            usernameUnique: true,\n            passwordError: false,\n            newPasswordError: false,\n            confirmPasswordError: false,\n            oldPasswordRequire: false,\n            errorInfo: 'The username is registered by the other person!',\n            picture: '',\n        };\n        this.updateUserInfo = this.updateUserInfo.bind(this);\n        this.existUsername = this.existUsername.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            userData: oldData,\n            error: false,\n            oldPasswordRequire: false,\n            usernameUnique: true,\n            passwordError: false,\n            confirmPasswordError: (this.state.userData.newPassword === this.state.userData.confirmPassword ?\n                false : this.state.confirmPasswordError),\n            newPasswordError: (this.state.userData.newPassword !== '' || this.state.userData.oldPassword === ''\n                ? false : this.state.newPasswordError),\n        });\n    }\n\n    handleEventChangeForPicture = () => event => {\n        this.setState({ picture: event.target.files[0] });\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    uploadPicture = async () => {\n        if (this.state.picture !== '') {\n            let formData = new FormData();\n            formData.append('file', this.state.picture);\n            formData.append('pictureID', this.props.user.email);\n\n            const config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            };\n            axios.post(\"api/picture-info/update\",formData)\n                .then((response) => {\n                    alert(\"The file is successfully uploaded\");\n                }).catch((error) => {\n            });\n        }\n    }\n\n    updateUserInfo() {\n        if (this.state.userData.oldPassword !== this.props.user.password && this.state.userData.oldPassword !== '') {\n            this.setState({ passwordError:true });\n        }\n        else if (this.state.userData.oldPassword === '' && this.state.userData.newPassword !== '') {\n            this.setState({ oldPasswordRequire:true });\n        }\n        else if (this.state.userData.oldPassword !== '' && this.state.userData.newPassword === '') {\n            this.setState({ newPasswordError:true });\n        }\n        else if (this.state.userData.newPassword !== this.state.userData.confirmPassword){\n            this.setState({ confirmPasswordError: true });\n        }\n        else if (!this.state.passwordError && !this.state.oldPasswordRequire\n            && !this.state.newPasswordError && !this.state.confirmPasswordError) {\n\n            let data = {\n                userName: this.state.userData.username,\n            };\n            let request = new Request('api/user-info/check-username-email-unique', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n            fetch(request)\n                .then(response => response.json())\n                .then(item => this.setState({item}))\n                .then(() => {\n                    let data = {\n                        email: this.props.user.email,\n                        userName: this.state.userData.username === '' ? this.props.user.username : this.state.userData.username,\n                        password: this.state.userData.newPassword === '' ? this.props.user.password : this.state.userData.newPassword,\n                        pictureID: this.state.userData.pictureID,\n                    };\n                    if (!this.existUsername(data.userName)) {\n                        this.uploadPicture();\n                        let request = new Request('api/user-info/update-user-info', {\n                            method: 'PUT',\n                            headers: new Headers({ 'Content-Type': 'application/json' }),\n                            body: JSON.stringify(data)\n                        });\n\n                        fetch(request)\n                        .then(response => response.json())\n                        .then(() => {\n                            this.props.onSuccess(data.email, data.userName, data.password, this.props.user.url);\n                            this.ChangeView('/');\n                        });\n                    } else {\n                        this.setState({ usernameUnique:false });\n                    }\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    existUsername(username) {\n        let exist = false;\n        for (let itemInd in this.state.item) {\n            let each = this.state.item[itemInd];\n            if (each.userName === username && each.email !== this.props.user.email) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <fieldset className=\"fieldset\">\n                    <form>\n                        <div className=\"postContentLayout\">\n                            {\n\n                            }\n                            <img className=\"roundedCircleArticleImg\"\n                                src={this.props.user.url ? \"http://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\"\n                                    + this.props.user.email + '/' + this.props.user.email + \".jpg\" : img}\n                                alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                            </img>\n                            <div className=\"postProfile\">\n                                <h2>{this.props.user.email}</h2>\n                            </div>\n                        </div>\n                        <h2>User Info</h2>\n                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                        <h2>Username (update username by typing new name below) :</h2>\n                        <TextField\n                            error={!this.state.usernameUnique}\n                            label={this.state.userData.username === ''\n                                ? this.props.user.username : (this.state.usernameUnique ? \"new username\" : this.state.errorInfo)}\n                            value={this.state.userData.username}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('username')}\n                        />\n                        <br />\n                        <h2>Change Password:</h2>\n                        <TextField\n                            error={this.state.passwordError  || this.state.oldPasswordRequire}\n                            label={this.state.passwordError ? \"Old password is incorrect!\" : \"Old Password\"}\n                            value={this.state.userData.oldPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('oldPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.newPasswordError}\n                            label={this.state.newPasswordError ? \"Require new password\" : \"New Password\"}\n                            value={this.state.userData.Password}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('newPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.confirmPasswordError}\n                            label={this.state.confirmPasswordError ? \"New password and confirm password are different!\" : \"Confirm Password\"}\n                            value={this.state.userData.confirmPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('confirmPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br /><br />\n                        <h2>Update profile picture :</h2>\n                        <input type=\"file\" onChange={this.handleEventChangeForPicture()} accept=\"image/png, image/jpeg, image/gif, image/jpg\"/>\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" type=\"button\" onClick={() => this.ChangeView('/')}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={() => this.updateUserInfo()}>Update</Button>\n                    </form>\n                </fieldset>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/PostContent.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\n\nexport default class PostContent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: this.props.clickedPost,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <br />\n                <h2 className=\"title\" align=\"center\">{this.state.post.title}</h2>\n                <p className=\"nameAndTime\">{this.state.post.username} | {this.state.post.postTime}</p>\n                <br />\n                <form className=\"postContentForm\">\n                    <p className=\"detail\">{this.state.post.content}</p>\n                </form>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Register from '../components/Register';\nimport Login from '../components/Login';\nimport User from '../components/User';\nimport PostContent from '../components/PostContent';\n\nvar RouterMixin = require('react-mini-router').RouterMixin;\n\n/**\n * RoutedApp handles routing between each of the main views as well\n * as error handling when a non-existant page is queried\n */\nvar RoutedApp = createReactClass({\n\n    getInitialState() {\n        return { loggedIn: this.props.loggedIn};\n    },\n\n    mixins: [RouterMixin],\n\n    routes: {\n        '/': 'home',\n        '/register': 'register',\n        '/login': 'login',\n        '/user': 'user',\n        '/postContent': 'postContent',\n    },\n\n    render() {\n        return this.renderCurrentRoute();\n    },\n\n    home() {\n        return (\n            <MainPage\n                loggedIn={this.props.loggedIn}\n                onSuccess={this.props.onSuccess}\n                logout={this.props.logout}\n                user={this.props.user}\n                updateClickedUsername={this.props.updateClickedUsername}\n                clickedUsername={this.props.clickedUsername}\n                clickedPost={this.props.clickedPost}\n                updateClickedPost={this.props.updateClickedPost}\n            />\n        );\n    },\n\n    register() {\n        return (\n            <Register\n            />\n        );\n    },\n\n    login() {\n        return (\n            <Login\n                loggedIn={this.props.loggedIn}\n                onSuccess={this.props.onSuccess}\n                user={this.props.user}\n            />\n        );\n    },\n\n    user() {\n        return (\n            <User\n                logout={this.props.logout}\n                user={this.props.user}\n                onSuccess={this.props.onSuccess}\n            />\n        );\n    },\n\n    postContent() {\n        return (\n            <PostContent\n                clickedPost={this.props.clickedPost}\n                updateClickedPost={this.props.updateClickedPost}\n            />\n        )\n    },\n\n    notFound(path) {\n        return <div className=\"not-found\">Page Not Found: {path}</div>;\n    }\n});\n\nexport default RoutedApp;","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme';\nimport RoutedApp from './routing/routing';\nimport './App.css';\n\n/**\n * 'App' serves as a colleciton point of lower components before they\n * are sent off to rendering in index.js\n * This gives us a place to inject routing and theming as well as place\n * components that stay constant throughout the experience, such as the\n * NavBar\n*/\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: false,\n            user: '',\n            clickedUsername: '',\n            clickedPost: [],\n        };\n    }\n\n    componentDidMount() {\n        const user = sessionStorage.getItem('email') ? {\n            email: sessionStorage.getItem('email'),\n            username: sessionStorage.getItem('username'),\n            password: sessionStorage.getItem('password'),\n            url: sessionStorage.getItem('url')\n        } : null;\n        this.setState({\n            loggedIn: user ? true : false,\n            user\n        });\n    }\n\n    updateClickedUsername(username) {\n        this.setState({\n            clickedUsername: username,\n        });\n        sessionStorage.setItem('clickedUsername', username);\n    }\n\n    updateClickedPost(post) {\n        this.setState({\n            clickedPost: post,\n        });\n        sessionStorage.setItem('clickedPost', post);\n    }\n\n    onSuccess(userEmail, username, password, url) {\n        this.setState({\n            loggedIn: true,\n            user: {\n                email: userEmail,\n                username: username,\n                password: password,\n                url: url,\n            }\n        });\n        sessionStorage.setItem('email', userEmail);\n        sessionStorage.setItem('username', username);\n        sessionStorage.setItem('password', password);\n        sessionStorage.setItem('url', url);\n    }\n\n    logout() {\n        this.setState({\n            loggedIn: false,\n            user: null\n        });\n        sessionStorage.removeItem('email');\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n        sessionStorage.removeItem('url');\n    }\n\n    render() {\n        return (\n            <div className=\"background\">\n                <MuiThemeProvider theme={theme}>\n                    <div>\n                        <NavBar updateClickedUsername={this.updateClickedUsername.bind(this)} user={this.state.user}/>\n                        <RoutedApp\n                            loggedIn={this.loggedIn}\n                            onSuccess={this.onSuccess.bind(this)}\n                            logout={this.logout.bind(this)}\n                            user={this.state.user}\n                            history={true}\n                            clickedUsername={this.state.clickedUsername}\n                            updateClickedUsername={this.updateClickedUsername.bind(this)}\n                            clickedPost={this.state.clickedPost}\n                            updateClickedPost={this.updateClickedPost.bind(this)}\n                        />\n                    </div>\n                </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}