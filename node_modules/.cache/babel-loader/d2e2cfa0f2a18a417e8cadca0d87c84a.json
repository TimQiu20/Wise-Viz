{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\User.js\";\nimport React from 'react';\nimport { Button, TextField, IconButton } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'axios';\n/**\n *\n *\n */\n\nexport default class User extends React.Component {\n  ChangeView(page) {\n    navigate(page);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleEventChange = field => event => {\n      const oldData = this.state.userData;\n      oldData[field] = event.target.value;\n      this.setState({\n        userData: oldData,\n        error: false,\n        oldPasswordRequire: false,\n        usernameUnique: true,\n        passwordError: false,\n        confirmPasswordError: this.state.userData.newPassword === this.state.userData.confirmPassword ? false : this.state.confirmPasswordError,\n        newPasswordError: this.state.userData.newPassword !== '' || this.state.userData.oldPassword === '' ? false : this.state.newPasswordError\n      });\n    };\n\n    this.handleEventChangeForPicture = () => event => {\n      this.setState({\n        picture: event.target.files[0]\n      });\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    };\n\n    this.uploadPicture = async () => {\n      if (this.state.picture !== '') {\n        let formData = new FormData();\n        formData.append('file', this.state.picture);\n        formData.append('pictureID', this.props.user.email);\n        const config = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        axios.post(\"api/picture-info/update\", formData).then(response => {\n          alert(\"The file is successfully uploaded\");\n        }).catch(error => {});\n      }\n    };\n\n    this.state = {\n      userData: {\n        username: '',\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      item: [],\n      showPassword: false,\n      usernameUnique: true,\n      passwordError: false,\n      newPasswordError: false,\n      confirmPasswordError: false,\n      oldPasswordRequire: false,\n      errorInfo: 'The username is registered by the other person!',\n      picture: ''\n    };\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.existUsername = this.existUsername.bind(this);\n  }\n\n  componentDidMount() {}\n\n  updateUserInfo() {\n    if (this.state.userData.oldPassword !== this.props.user.password && this.state.userData.oldPassword !== '') {\n      this.setState({\n        passwordError: true\n      });\n    } else if (this.state.userData.oldPassword === '' && this.state.userData.newPassword !== '') {\n      this.setState({\n        oldPasswordRequire: true\n      });\n    } else if (this.state.userData.oldPassword !== '' && this.state.userData.newPassword === '') {\n      this.setState({\n        newPasswordError: true\n      });\n    } else if (this.state.userData.newPassword !== this.state.userData.confirmPassword) {\n      this.setState({\n        confirmPasswordError: true\n      });\n    } else if (!this.state.passwordError && !this.state.oldPasswordRequire && !this.state.newPasswordError && !this.state.confirmPasswordError) {\n      let data = {\n        userName: this.state.userData.username\n      };\n      let request = new Request('api/user-info/check-username-email-unique', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(response => response.json()).then(item => this.setState({\n        item\n      })).then(() => {\n        let data = {\n          email: this.props.user.email,\n          userName: this.state.userData.username === '' ? this.props.user.username : this.state.userData.username,\n          password: this.state.userData.newPassword === '' ? this.props.user.password : this.state.userData.newPassword,\n          pictureID: this.state.userData.pictureID\n        };\n\n        if (!this.existUsername(data.userName)) {\n          this.uploadPicture();\n          let request = new Request('api/user-info/update-user-info', {\n            method: 'PUT',\n            headers: new Headers({\n              'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify(data)\n          });\n          fetch(request).then(response => response.json()).then(() => {\n            this.props.onSuccess(data.email, data.userName, data.password, this.props.user.url);\n            this.ChangeView('/');\n          });\n        } else {\n          this.setState({\n            usernameUnique: false\n          });\n        }\n      }).catch(err => console.log(err));\n    }\n  }\n\n  existUsername(username) {\n    let exist = false;\n\n    for (let itemInd in this.state.item) {\n      let each = this.state.item[itemInd];\n\n      if (each.userName === username && each.email !== this.props.user.email) {\n        exist = true;\n      }\n    }\n\n    return exist;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"postContentLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"roundedCircleArticleImg\",\n      src: this.props.user.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\" + this.props.user.email + '/' + this.props.user.email + \".jpg\" : img,\n      alt: \"user\",\n      onError: e => {\n        e.target.onerror = null;\n        e.target.src = img;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"postProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.props.user.email))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"User Info\"), React.createElement(\"hr\", {\n      className: \"hr\",\n      width: \"100%\",\n      color: \"#7986cb\",\n      size: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Username (update username by typing new name below) :\"), React.createElement(TextField, {\n      error: !this.state.usernameUnique,\n      label: this.state.userData.username === '' ? this.props.user.username : this.state.usernameUnique ? \"new username\" : this.state.errorInfo,\n      value: this.state.userData.username,\n      className: \"postTitleText\",\n      onChange: this.handleEventChange('username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Change Password:\"), React.createElement(TextField, {\n      error: this.state.passwordError || this.state.oldPasswordRequire,\n      label: this.state.passwordError ? \"Old password is incorrect!\" : \"Old Password\",\n      value: this.state.userData.oldPassword,\n      className: \"postTitleText\",\n      onChange: this.handleEventChange('oldPassword'),\n      type: this.state.showPassword ? 'text' : 'password',\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.newPasswordError,\n      label: this.state.newPasswordError ? \"Require new password\" : \"New Password\",\n      value: this.state.userData.Password,\n      className: \"postTitleText\",\n      onChange: this.handleEventChange('newPassword'),\n      type: this.state.showPassword ? 'text' : 'password',\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: this.state.confirmPasswordError,\n      label: this.state.confirmPasswordError ? \"New password and confirm password are different!\" : \"Confirm Password\",\n      value: this.state.userData.confirmPassword,\n      className: \"postTitleText\",\n      onChange: this.handleEventChange('confirmPassword'),\n      type: this.state.showPassword ? 'text' : 'password',\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Update profile picture :\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleEventChangeForPicture(),\n      accept: \"image/png, image/jpeg, image/gif, image/jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"postButtons\",\n      type: \"button\",\n      onClick: () => this.ChangeView('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"postButtons\",\n      onClick: () => this.updateUserInfo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Update\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\User.js"],"names":["React","Button","TextField","IconButton","navigate","img","InputAdornment","Visibility","VisibilityOff","axios","User","Component","ChangeView","page","constructor","props","handleEventChange","field","event","oldData","state","userData","target","value","setState","error","oldPasswordRequire","usernameUnique","passwordError","confirmPasswordError","newPassword","confirmPassword","newPasswordError","oldPassword","handleEventChangeForPicture","picture","files","handleClickShowPassword","showPassword","uploadPicture","formData","FormData","append","user","email","config","headers","post","then","response","alert","catch","username","item","errorInfo","updateUserInfo","bind","existUsername","componentDidMount","password","data","userName","request","Request","method","Headers","body","JSON","stringify","fetch","json","pictureID","onSuccess","url","err","console","log","exist","itemInd","each","render","e","onerror","src","endAdornment","Password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField, IconButton } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'axios';\n\n/**\n *\n *\n */\nexport default class User extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                username: '',\n                oldPassword: '',\n                newPassword: '',\n                confirmPassword: '',\n            },\n            item: [],\n            showPassword: false,\n            usernameUnique: true,\n            passwordError: false,\n            newPasswordError: false,\n            confirmPasswordError: false,\n            oldPasswordRequire: false,\n            errorInfo: 'The username is registered by the other person!',\n            picture: '',\n        };\n        this.updateUserInfo = this.updateUserInfo.bind(this);\n        this.existUsername = this.existUsername.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            userData: oldData,\n            error: false,\n            oldPasswordRequire: false,\n            usernameUnique: true,\n            passwordError: false,\n            confirmPasswordError: (this.state.userData.newPassword === this.state.userData.confirmPassword ?\n                false : this.state.confirmPasswordError),\n            newPasswordError: (this.state.userData.newPassword !== '' || this.state.userData.oldPassword === ''\n                ? false : this.state.newPasswordError),\n        });\n    }\n\n    handleEventChangeForPicture = () => event => {\n        this.setState({ picture: event.target.files[0] });\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    uploadPicture = async () => {\n        if (this.state.picture !== '') {\n            let formData = new FormData();\n            formData.append('file', this.state.picture);\n            formData.append('pictureID', this.props.user.email);\n\n            const config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            };\n            axios.post(\"api/picture-info/update\",formData)\n                .then((response) => {\n                    alert(\"The file is successfully uploaded\");\n                }).catch((error) => {\n            });\n        }\n    }\n\n    updateUserInfo() {\n        if (this.state.userData.oldPassword !== this.props.user.password && this.state.userData.oldPassword !== '') {\n            this.setState({ passwordError:true });\n        }\n        else if (this.state.userData.oldPassword === '' && this.state.userData.newPassword !== '') {\n            this.setState({ oldPasswordRequire:true });\n        }\n        else if (this.state.userData.oldPassword !== '' && this.state.userData.newPassword === '') {\n            this.setState({ newPasswordError:true });\n        }\n        else if (this.state.userData.newPassword !== this.state.userData.confirmPassword){\n            this.setState({ confirmPasswordError: true });\n        }\n        else if (!this.state.passwordError && !this.state.oldPasswordRequire\n            && !this.state.newPasswordError && !this.state.confirmPasswordError) {\n\n            let data = {\n                userName: this.state.userData.username,\n            };\n            let request = new Request('api/user-info/check-username-email-unique', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n            fetch(request)\n                .then(response => response.json())\n                .then(item => this.setState({item}))\n                .then(() => {\n                    let data = {\n                        email: this.props.user.email,\n                        userName: this.state.userData.username === '' ? this.props.user.username : this.state.userData.username,\n                        password: this.state.userData.newPassword === '' ? this.props.user.password : this.state.userData.newPassword,\n                        pictureID: this.state.userData.pictureID,\n                    };\n                    if (!this.existUsername(data.userName)) {\n                        this.uploadPicture();\n                        let request = new Request('api/user-info/update-user-info', {\n                            method: 'PUT',\n                            headers: new Headers({ 'Content-Type': 'application/json' }),\n                            body: JSON.stringify(data)\n                        });\n\n                        fetch(request)\n                        .then(response => response.json())\n                        .then(() => {\n                            this.props.onSuccess(data.email, data.userName, data.password, this.props.user.url);\n                            this.ChangeView('/');\n                        });\n                    } else {\n                        this.setState({ usernameUnique:false });\n                    }\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    existUsername(username) {\n        let exist = false;\n        for (let itemInd in this.state.item) {\n            let each = this.state.item[itemInd];\n            if (each.userName === username && each.email !== this.props.user.email) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <fieldset className=\"fieldset\">\n                    <form>\n                        <div className=\"postContentLayout\">\n                            {\n\n                            }\n                            <img className=\"roundedCircleArticleImg\"\n                                src={this.props.user.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\"\n                                    + this.props.user.email + '/' + this.props.user.email + \".jpg\" : img}\n                                alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                            </img>\n                            <div className=\"postProfile\">\n                                <h2>{this.props.user.email}</h2>\n                            </div>\n                        </div>\n                        <h2>User Info</h2>\n                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                        <h2>Username (update username by typing new name below) :</h2>\n                        <TextField\n                            error={!this.state.usernameUnique}\n                            label={this.state.userData.username === ''\n                                ? this.props.user.username : (this.state.usernameUnique ? \"new username\" : this.state.errorInfo)}\n                            value={this.state.userData.username}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('username')}\n                        />\n                        <br />\n                        <h2>Change Password:</h2>\n                        <TextField\n                            error={this.state.passwordError  || this.state.oldPasswordRequire}\n                            label={this.state.passwordError ? \"Old password is incorrect!\" : \"Old Password\"}\n                            value={this.state.userData.oldPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('oldPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.newPasswordError}\n                            label={this.state.newPasswordError ? \"Require new password\" : \"New Password\"}\n                            value={this.state.userData.Password}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('newPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.confirmPasswordError}\n                            label={this.state.confirmPasswordError ? \"New password and confirm password are different!\" : \"Confirm Password\"}\n                            value={this.state.userData.confirmPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('confirmPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br /><br />\n                        <h2>Update profile picture :</h2>\n                        <input type=\"file\" onChange={this.handleEventChangeForPicture()} accept=\"image/png, image/jpeg, image/gif, image/jpg\"/>\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" type=\"button\" onClick={() => this.ChangeView('/')}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={() => this.updateUserInfo()}>Update</Button>\n                    </form>\n                </fieldset>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}