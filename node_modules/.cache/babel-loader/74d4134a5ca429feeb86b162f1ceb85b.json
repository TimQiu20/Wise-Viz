{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\Post.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/MainPage.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport { navigate } from 'react-mini-router';\nimport ChangePageView from './ChangePage';\nimport Moment from 'react-moment';\nexport default class Post extends React.Component {\n  ChangeView(page) {\n    navigate(page);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      numOfPosts: 0,\n      currentPage: this.props.clickedUsername === '' ? this.props.currentPageNum : 1,\n      numOfPages: 0,\n      currentShownPosts: [],\n      buttons: []\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getPageButtons = this.getPageButtons.bind(this);\n    this.updateCurrentPosts = this.updateCurrentPosts.bind(this);\n    this.updataPosts = this.updataPosts.bind(this);\n    this.changePageChild = React.createRef();\n    this.getRelativeTime = this.getRelativeTime.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  deletePost(postID, comment) {\n    let data = {\n      postID: postID,\n      comment: comment\n    };\n    let request = new Request('/api/post-info/delete', {\n      method: 'DELETE',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    fetch(request).then(response => response.json()).then(() => this.getPosts()).then(() => this.ChangeView('/'));\n  }\n\n  getPosts() {\n    let data = {\n      username: this.props.clickedUsername\n    };\n    let request = '';\n\n    if (this.props.clickedUsername === '') {\n      request = new Request('api/post-info/get');\n    } else {\n      request = new Request('api/post-info/get-click-user-post', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n    }\n\n    fetch(request).then(response => response.json()).then(items => this.setState({\n      posts: items\n    })).then(() => {\n      let numOfPosts = this.state.posts.length;\n      let numOfPages = Math.ceil(numOfPosts / 3);\n\n      if (numOfPages === 0) {\n        numOfPages = 1;\n      }\n\n      let currentShownPosts = [];\n\n      for (let i = 3 * (this.state.currentPage - 1); i < 3 * this.state.currentPage && i < numOfPosts; i++) {\n        let post = this.state.posts[i];\n        currentShownPosts[i] = post;\n      }\n\n      this.setState({\n        numOfPosts: numOfPosts,\n        numOfPages: numOfPages,\n        currentShownPosts: currentShownPosts\n      });\n      let tempPageNum = this.props.clickedUsername === '' ? this.props.currentPageNum : 1;\n      this.getPageButtons(tempPageNum);\n    });\n  }\n\n  updataPosts(b) {\n    let currentShownPosts = [];\n\n    for (let i = 3 * (b - 1); i < 3 * b && i < this.state.numOfPosts; i++) {\n      let post = this.state.posts[i];\n      currentShownPosts[i] = post;\n    }\n\n    this.setState({\n      currentShownPosts: currentShownPosts\n    });\n    this.getPageButtons(b);\n  }\n\n  updateCurrentPosts(b) {\n    this.setState({\n      currentPage: b\n    });\n\n    if (this.props.clickedUsername === '') {\n      this.props.updateCurrentPageNum(b);\n    }\n\n    this.updataPosts(b);\n  }\n\n  getPageButtons(b) {\n    if (b == null) {\n      b = 1;\n    }\n\n    let totalPages = this.state.numOfPages;\n    let currentPage = b;\n    let buttons = [];\n    buttons[0] = 1;\n    let index = 1;\n\n    for (let i = currentPage - 2 > 1 ? currentPage - 2 : 2; i <= currentPage + 2 && i <= totalPages; i++) {\n      if (buttons[index - 1] + 1 !== i) {\n        buttons[index] = '...';\n        index++;\n      }\n\n      buttons[index] = i;\n      index++;\n    }\n\n    if (buttons[index - 1] !== totalPages) {\n      if (buttons[index - 1] !== totalPages - 1) {\n        buttons[index] = '...';\n        buttons[index + 1] = totalPages;\n      } else {\n        buttons[index] = totalPages;\n      }\n    }\n\n    this.setState({\n      buttons: buttons\n    });\n  }\n\n  getRelativeTime(time) {\n    if (time) {\n      let temp = time.split(' ');\n      return temp[0] + \"T\" + temp[1] + \"-0000\";\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"grid\",\n      method: \"post\",\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(ChangePageView, {\n      ref: this.changePageChild,\n      choosePage: this.updateCurrentPosts,\n      totalPages: this.state.numOfPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), this.state.currentShownPosts.map((post, index) => React.createElement(\"article\", {\n      className: \"postArticle\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"postFieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userInfoDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"roundedCircleArticleImg\",\n      src: post.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + post.url + \"/profile_picture/\" + post.userEmail + '/' + post.userEmail + \".jpg\" : img,\n      alt: \"user\",\n      onError: e => {\n        e.target.onerror = null;\n        e.target.src = img;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"postContentLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"postProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"userInfoPUsername\",\n      onClick: () => {\n        this.props.updateClickedUsername(post.username);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, post.username), React.createElement(\"p\", {\n      className: \"userInfoP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"| \", React.createElement(Moment, {\n      fromNow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.getRelativeTime(post.postTime))), (this.props.user ? this.props.user.username : '') === post.username && React.createElement(Button, {\n      className: \"deleteBtn\",\n      onClick: () => this.deletePost(post.postID, post.comment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(\"hr\", {\n      className: \"hr\",\n      width: \"100%\",\n      color: \"#7986cb\",\n      size: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"h2ForPostTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"postTitle\",\n      onClick: () => {\n        this.props.updateClickedPost(post);\n        this.ChangeView('/postContent');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, post.title.length > 50 ? post.title.substring(0, 30) + '...' : post.title)), React.createElement(\"p\", {\n      className: \"postContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, post.content.length > 200 ? post.content.substring(0, 350) + '...' : post.content)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"pageButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.buttons.map((b, index) => {\n      if (b === this.state.currentPage) {\n        return React.createElement(Button, {\n          className: \"currentPageButton\",\n          key: index,\n          num: b,\n          variant: \"contained\",\n          onClick: () => this.updateCurrentPosts(b),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, b);\n      } else if (b === '...') {\n        return React.createElement(Button, {\n          className: \"pageButton\",\n          key: index,\n          num: b,\n          variant: \"contained\",\n          onClick: () => this.changePageChild.current.handleOpen(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, b);\n      } else {\n        return React.createElement(Button, {\n          className: \"pageButton\",\n          key: index,\n          num: b,\n          variant: \"contained\",\n          onClick: () => this.updateCurrentPosts(b),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, b);\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\Post.js"],"names":["React","Button","img","navigate","ChangePageView","Moment","Post","Component","ChangeView","page","constructor","props","state","posts","numOfPosts","currentPage","clickedUsername","currentPageNum","numOfPages","currentShownPosts","buttons","getPosts","bind","getPageButtons","updateCurrentPosts","updataPosts","changePageChild","createRef","getRelativeTime","deletePost","componentDidMount","postID","comment","data","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","username","items","setState","length","Math","ceil","i","post","tempPageNum","b","updateCurrentPageNum","totalPages","index","time","temp","split","render","map","url","userEmail","e","target","onerror","src","updateClickedUsername","postTime","user","updateClickedPost","title","substring","content","current","handleOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/MainPage.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport { navigate } from 'react-mini-router';\nimport ChangePageView from './ChangePage';\nimport Moment from 'react-moment';\n\nexport default class Post extends React.Component {\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            numOfPosts: 0,\n            currentPage: this.props.clickedUsername === '' ? this.props.currentPageNum : 1,\n            numOfPages: 0,\n            currentShownPosts: [],\n            buttons: [],\n        }\n        this.getPosts = this.getPosts.bind(this);\n        this.getPageButtons = this.getPageButtons.bind(this);\n        this.updateCurrentPosts = this.updateCurrentPosts.bind(this);\n        this.updataPosts = this.updataPosts.bind(this);\n        this.changePageChild = React.createRef();\n        this.getRelativeTime = this.getRelativeTime.bind(this);\n        this.deletePost = this.deletePost.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPosts();\n    }\n\n    deletePost(postID, comment) {\n        let data = {\n            postID: postID,\n            comment: comment\n        }\n        let request = new Request('/api/post-info/delete', {\n            method: 'DELETE',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(() => this.getPosts())\n            .then(() => this.ChangeView('/'));\n    }\n\n    getPosts() {\n\n        let data = { username:this.props.clickedUsername };\n        let request = '';\n\n        if (this.props.clickedUsername === '') {\n            request = new Request('api/post-info/get')\n\n        } else {\n            request = new Request('api/post-info/get-click-user-post', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n        }\n        fetch(request)\n                .then(response => response.json())\n                .then(items => this.setState({ posts:items }))\n                .then(() => {\n                    let numOfPosts = this.state.posts.length;\n                    let numOfPages = Math.ceil(numOfPosts / 3);\n                    if (numOfPages === 0) {\n                        numOfPages = 1;\n                    }\n                    let currentShownPosts = [];\n                    for (let i = 3 * (this.state.currentPage - 1); i < 3 * this.state.currentPage && i < numOfPosts; i++) {\n                        let post = this.state.posts[i];\n                        currentShownPosts[i] = post;\n                    }\n                    this.setState({\n                        numOfPosts: numOfPosts,\n                        numOfPages: numOfPages,\n                        currentShownPosts: currentShownPosts,\n                    });\n                    let tempPageNum = this.props.clickedUsername === '' ? this.props.currentPageNum : 1;\n                    this.getPageButtons(tempPageNum);\n                });\n    }\n\n    updataPosts(b) {\n        let currentShownPosts = [];\n        for (let i = 3 * (b - 1); i < 3 * b && i < this.state.numOfPosts; i++) {\n            let post = this.state.posts[i];\n            currentShownPosts[i] = post;\n        }\n        this.setState({\n            currentShownPosts: currentShownPosts,\n        });\n        this.getPageButtons(b);\n    }\n\n    updateCurrentPosts(b) {\n        this.setState({ currentPage:b });\n        if (this.props.clickedUsername === '') {\n            this.props.updateCurrentPageNum(b);\n        }\n        this.updataPosts(b);\n    }\n\n    getPageButtons(b) {\n        if (b == null) {\n            b = 1;\n        }\n        let totalPages = this.state.numOfPages;\n        let currentPage = b;\n        let buttons = [];\n        buttons[0] = 1;\n        let index = 1;\n        for (let i = currentPage - 2 > 1 ? currentPage - 2 : 2 ; i <= currentPage + 2 && i <= totalPages; i++) {\n            if (buttons[index - 1] + 1 !== i) {\n                buttons[index] = '...';\n                index++;\n            }\n            buttons[index] = i;\n            index++;\n        }\n        if (buttons[index - 1] !== totalPages) {\n            if (buttons[index - 1] !== totalPages - 1) {\n                buttons[index] = '...';\n                buttons[index + 1] = totalPages;\n            } else {\n                buttons[index] = totalPages;\n            }\n        }\n        this.setState({ buttons:buttons });\n    }\n\n    getRelativeTime(time) {\n        if (time) {\n            let temp = time.split(' ');\n            return temp[0] + \"T\" + temp[1] + \"-0000\";\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"grid\" method=\"post\" action=\"\">\n                    <br/>\n                    <ChangePageView ref={this.changePageChild} choosePage={this.updateCurrentPosts} totalPages={this.state.numOfPages} />\n                    {this.state.currentShownPosts.map((post, index) => (\n                        <article className=\"postArticle\" key={index}>\n                            <fieldset className=\"postFieldset\">\n                                <div className=\"userInfoDiv\">\n                                    <img className=\"roundedCircleArticleImg\"\n                                        src={post.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + post.url + \"/profile_picture/\"\n                                            + post.userEmail + '/' + post.userEmail + \".jpg\" : img}\n                                        alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                                    </img>\n                                    <div className=\"postContentLayout\">\n                                        <div className=\"postProfile\">\n                                            <Button className=\"userInfoPUsername\" onClick={() => {\n                                                    this.props.updateClickedUsername(post.username);\n                                                }}>{post.username}</Button>\n                                            <p className=\"userInfoP\">| <Moment fromNow>{this.getRelativeTime(post.postTime)}</Moment></p>\n                                            { (this.props.user ? this.props.user.username : '') === post.username && (\n                                                <Button className=\"deleteBtn\" onClick={() => this.deletePost(post.postID, post.comment)}>Delete</Button>\n                                            )}\n                                        </div>\n                                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                                        <h2 className=\"h2ForPostTitle\"><Button className=\"postTitle\" onClick={() => {\n                                            this.props.updateClickedPost(post);\n                                            this.ChangeView('/postContent');\n                                        }}>{post.title.length > 50 ? post.title.substring(0, 30) + '...' : post.title}</Button></h2>\n                                        <p className=\"postContent\">{post.content.length > 200 ? post.content.substring(0, 350) + '...' : post.content}</p>\n                                    </div>\n                                </div>\n                            </fieldset>\n                            <br/>\n                        </article>\n                    ))}\n                </form>\n                <div className=\"pageButtons\">\n                    {this.state.buttons.map((b, index) => {\n                        if (b === this.state.currentPage) {\n                            return (<Button className=\"currentPageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                        else if (b === '...') {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.changePageChild.current.handleOpen()}>{b}</Button>)\n                        }\n                        else {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}