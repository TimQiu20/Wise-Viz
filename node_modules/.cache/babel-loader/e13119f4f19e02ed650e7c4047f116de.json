{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\Comment.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/PostContent.css';\n/**\n *\n *\n */\n\nvar Comment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comment, _React$Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          newUserData: oldData\n        });\n      };\n    };\n\n    _this.state = {\n      content: '',\n      user: _this.props.user ? _this.props.user.username : null\n    };\n    _this.post = _this.post.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"post\",\n    value: function post() {\n      var date = new Date();\n      var data = {\n        id: this.props.clickedPost.postID,\n        commentID: Math.random().toString(36).substr(2, 9),\n        content: this.state.content,\n        time: date.toISOString().slice(0, 19).replace('T', ' '),\n        user: this.state.user\n      };\n      var request = new Request('/api/comment-info/post', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(function (response) {\n        response.json().then(function (data) {});\n      });\n      this.props.reverseState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"commentHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Content:\"), React.createElement(\"textarea\", {\n        name: \"message\",\n        className: \"textarea\",\n        require: true,\n        rows: \"10\",\n        cols: \"30\",\n        wrap: \"soft\",\n        value: this.state.postContent,\n        onChange: this.handleEventChange('content'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"postButtons\",\n        onClick: function onClick() {\n          return _this2.props.reverseState();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"postButtons\",\n        onClick: this.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit Comment\"))));\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\nexport { Comment as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\Comment.js"],"names":["React","Button","TextField","Comment","props","handleEventChange","field","event","oldData","state","target","value","setState","newUserData","content","user","username","post","bind","date","Date","data","id","clickedPost","postID","commentID","Math","random","toString","substr","time","toISOString","slice","replace","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","reverseState","postContent","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/PostContent.css';\n\n/**\n *\n *\n */\nexport default class Comment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            user: this.props.user ? this.props.user.username : null,\n        }\n        this.post = this.post.bind(this);\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    post() {\n        let date = new Date();\n        let data = {\n            id: this.props.clickedPost.postID,\n            commentID: Math.random().toString(36).substr(2, 9),\n            content: this.state.content,\n            time: date.toISOString().slice(0, 19).replace('T', ' '),\n            user: this.state.user,\n        };\n        let request = new Request('/api/comment-info/post', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        fetch(request)\n            .then(function(response) {\n                response.json().then(function(data) {\n                })\n        });\n        this.props.reverseState();\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <form className=\"grid\">\n                    <fieldset>\n                    <h2 className=\"commentHeader\">Content:</h2>\n                    <textarea\n                        name=\"message\"\n                        className=\"textarea\"\n                        require={true}\n                        rows=\"10\"\n                        cols=\"30\"\n                        wrap=\"soft\"\n                        value={this.state.postContent}\n                        onChange={this.handleEventChange('content')}\n                    >\n                    </textarea>\n                    <br/><br/>\n                    <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" onClick={() => this.props.reverseState()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={this.post}>Submit Comment</Button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}