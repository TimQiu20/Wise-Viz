{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\CreatePost.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/MainPage.css';\nimport PostSucceedView from './PostSucceed';\n/**\n *\n *\n */\n\nexport default class CreatePost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEventChange = field => event => {\n      const oldData = this.state;\n      oldData[field] = event.target.value;\n      this.setState({\n        newUserData: oldData,\n        error: false\n      });\n    };\n\n    this.state = {\n      postTitle: '',\n      postContent: '',\n      username: '',\n      error: false\n    };\n    this.checkPostAndPost = this.checkPostAndPost.bind(this);\n    this.postSucceedChild = React.createRef();\n    this.getUsername = this.getUsername.bind(this);\n  }\n\n  getUsername() {\n    let data = {\n      email: this.props.user.email\n    };\n    let request = new Request('api/user-info/get-username', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    fetch(request).then(response => response.json()).then(item => {\n      this.setState({\n        username: item[0].userName\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getUsername();\n  }\n\n  checkPostAndPost() {\n    if (this.state.postTitle === '') {\n      this.setState({\n        error: true\n      });\n    } else {\n      let date = new Date();\n      let data = {\n        postID: Math.random().toString(36).substr(2, 9),\n        title: this.state.postTitle,\n        content: this.state.postContent,\n        postTime: date.toISOString().slice(0, 19).replace('T', ' '),\n        email: this.props.user.email,\n        username: this.state.username,\n        url: this.props.user.url\n      };\n      let request = new Request('api/post-info/post', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(function (response) {\n        response.json().then(function (data) {});\n      });\n      this.postSucceedChild.current.handleOpen();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(PostSucceedView, {\n      ref: this.postSucceedChild,\n      handleCreatePostClose: this.props.handleCreatePostClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"New Post\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Post Title:\"), React.createElement(TextField, {\n      required: true,\n      error: this.state.error,\n      label: \"Post Title\",\n      variant: \"outlined\",\n      value: this.state.postTitle,\n      className: \"postTitleText\",\n      onChange: this.handleEventChange('postTitle'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Content:\"), React.createElement(\"textarea\", {\n      name: \"message\",\n      className: \"textarea\",\n      rows: \"10\",\n      cols: \"30\",\n      wrap: \"soft\",\n      value: this.state.postContent,\n      onChange: this.handleEventChange('postContent'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"postButtons\",\n      onClick: () => this.props.handleCreatePostClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"postButtons\",\n      onClick: this.checkPostAndPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Post\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\CreatePost.js"],"names":["React","Button","TextField","PostSucceedView","CreatePost","Component","constructor","props","handleEventChange","field","event","oldData","state","target","value","setState","newUserData","error","postTitle","postContent","username","checkPostAndPost","bind","postSucceedChild","createRef","getUsername","data","email","user","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","item","userName","componentDidMount","date","Date","postID","Math","random","toString","substr","title","content","postTime","toISOString","slice","replace","url","current","handleOpen","render","handleCreatePostClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/MainPage.css';\nimport PostSucceedView from './PostSucceed';\n\n/**\n *\n *\n */\nexport default class CreatePost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            postTitle: '',\n            postContent: '',\n            username: '',\n            error: false,\n        }\n        this.checkPostAndPost = this.checkPostAndPost.bind(this);\n        this.postSucceedChild = React.createRef();\n        this.getUsername = this.getUsername.bind(this);\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n            error: false,\n        });\n    }\n\n    getUsername() {\n        let data = { email: this.props.user.email};\n        let request = new Request('api/user-info/get-username', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        fetch(request)\n            .then(response => response.json())\n            .then(item => {\n                this.setState({ username:item[0].userName })\n            });\n    }\n\n    componentDidMount() {\n        this.getUsername();\n    }\n\n    checkPostAndPost() {\n        if (this.state.postTitle === '') {\n            this.setState({ error:true });\n        } else {\n            let date = new Date();\n            let data = {\n                postID: Math.random().toString(36).substr(2, 9),\n                title: this.state.postTitle,\n                content: this.state.postContent,\n                postTime: date.toISOString().slice(0, 19).replace('T', ' '),\n                email: this.props.user.email,\n                username: this.state.username,\n                url: this.props.user.url,\n            };\n            let request = new Request('api/post-info/post', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n\n            fetch(request)\n                .then(function(response) {\n                    response.json().then(function(data) {\n                    })\n            });\n            this.postSucceedChild.current.handleOpen();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <PostSucceedView ref={this.postSucceedChild} handleCreatePostClose={this.props.handleCreatePostClose.bind(this)}/>\n                <form className=\"grid\">\n                    <fieldset className=\"fieldset\">\n                        <legend>\n                            New Post\n                        </legend>\n                        <h2>Post Title:</h2>\n                        <TextField\n                            required\n                            error={this.state.error}\n                            label=\"Post Title\"\n                            variant=\"outlined\"\n                            value={this.state.postTitle}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('postTitle')}\n                        />\n                        <br />\n                        <h2>Content:</h2>\n                        <textarea\n                            name=\"message\"\n                            className=\"textarea\"\n                            rows=\"10\"\n                            cols=\"30\"\n                            wrap=\"soft\"\n                            value={this.state.postContent}\n                            onChange={this.handleEventChange('postContent')}\n                        >\n                        </textarea>\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" onClick={() => this.props.handleCreatePostClose()}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={this.checkPostAndPost}>Post</Button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}