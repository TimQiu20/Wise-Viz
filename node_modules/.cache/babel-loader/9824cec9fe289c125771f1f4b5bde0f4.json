{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\src\\\\components\\\\Post.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/MainPage.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport { navigate } from 'react-mini-router';\nimport ChangePageView from './ChangePage';\nimport Moment from 'react-moment';\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  _createClass(Post, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }]);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n    _this.state = {\n      posts: [],\n      numOfPosts: 0,\n      currentPage: _this.props.clickedUsername === '' ? _this.props.currentPageNum : 1,\n      numOfPages: 0,\n      currentShownPosts: [],\n      buttons: []\n    };\n    _this.getPosts = _this.getPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPageButtons = _this.getPageButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCurrentPosts = _this.updateCurrentPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updataPosts = _this.updataPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePageChild = React.createRef();\n    _this.getRelativeTime = _this.getRelativeTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePost = _this.deletePost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPosts();\n    }\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(postID, comment) {\n      var _this2 = this;\n\n      var data = {\n        postID: postID,\n        comment: comment\n      };\n      var request = new Request('/api/post-info/delete', {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function () {\n        return _this2.getPosts();\n      }).then(function () {\n        return _this2.ChangeView('/');\n      });\n    }\n  }, {\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this3 = this;\n\n      var data = {\n        username: this.props.clickedUsername\n      };\n      var request = '';\n\n      if (this.props.clickedUsername === '') {\n        request = new Request('api/post-info/get');\n      } else {\n        request = new Request('api/post-info/get-click-user-post', {\n          method: 'POST',\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(data)\n        });\n      }\n\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (items) {\n        return _this3.setState({\n          posts: items\n        });\n      }).then(function () {\n        var numOfPosts = _this3.state.posts.length;\n        var numOfPages = Math.ceil(numOfPosts / 3);\n\n        if (numOfPages === 0) {\n          numOfPages = 1;\n        }\n\n        var currentShownPosts = [];\n\n        for (var i = 3 * (_this3.state.currentPage - 1); i < 3 * _this3.state.currentPage && i < numOfPosts; i++) {\n          var post = _this3.state.posts[i];\n          currentShownPosts[i] = post;\n        }\n\n        _this3.setState({\n          numOfPosts: numOfPosts,\n          numOfPages: numOfPages,\n          currentShownPosts: currentShownPosts\n        });\n\n        var tempPageNum = _this3.props.clickedUsername === '' ? _this3.props.currentPageNum : 1;\n\n        _this3.getPageButtons(tempPageNum);\n      });\n    }\n  }, {\n    key: \"updataPosts\",\n    value: function updataPosts(b) {\n      var currentShownPosts = [];\n\n      for (var i = 3 * (b - 1); i < 3 * b && i < this.state.numOfPosts; i++) {\n        var post = this.state.posts[i];\n        currentShownPosts[i] = post;\n      }\n\n      this.setState({\n        currentShownPosts: currentShownPosts\n      });\n      this.getPageButtons(b);\n    }\n  }, {\n    key: \"updateCurrentPosts\",\n    value: function updateCurrentPosts(b) {\n      this.setState({\n        currentPage: b\n      });\n\n      if (this.props.clickedUsername === '') {\n        this.props.updateCurrentPageNum(b);\n      }\n\n      this.updataPosts(b);\n    }\n  }, {\n    key: \"getPageButtons\",\n    value: function getPageButtons(b) {\n      if (b == null) {\n        b = 1;\n      }\n\n      var totalPages = this.state.numOfPages;\n      var currentPage = b;\n      var buttons = [];\n      buttons[0] = 1;\n      var index = 1;\n\n      for (var i = currentPage - 2 > 1 ? currentPage - 2 : 2; i <= currentPage + 2 && i <= totalPages; i++) {\n        if (buttons[index - 1] + 1 !== i) {\n          buttons[index] = '...';\n          index++;\n        }\n\n        buttons[index] = i;\n        index++;\n      }\n\n      if (buttons[index - 1] !== totalPages) {\n        if (buttons[index - 1] !== totalPages - 1) {\n          buttons[index] = '...';\n          buttons[index + 1] = totalPages;\n        } else {\n          buttons[index] = totalPages;\n        }\n      }\n\n      this.setState({\n        buttons: buttons\n      });\n    }\n  }, {\n    key: \"getRelativeTime\",\n    value: function getRelativeTime(time) {\n      if (time) {\n        var temp = time.split(' ');\n        return temp[0] + \"T\" + temp[1] + \"-0000\";\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"grid\",\n        method: \"post\",\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(ChangePageView, {\n        ref: this.changePageChild,\n        choosePage: this.updateCurrentPosts,\n        totalPages: this.state.numOfPages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), this.state.currentShownPosts.map(function (post, index) {\n        return React.createElement(\"article\", {\n          className: \"postArticle\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          className: \"postFieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"userInfoDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"roundedCircleArticleImg\",\n          src: post.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + post.url + \"/profile_picture/\" + post.userEmail + '/' + post.userEmail + \".jpg\" : img,\n          alt: \"user\",\n          onError: function onError(e) {\n            e.target.onerror = null;\n            e.target.src = img;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"postContentLayout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postProfile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"userInfoPUsername\",\n          onClick: function onClick() {\n            _this4.props.updateClickedUsername(post.username);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, post.username), React.createElement(\"p\", {\n          className: \"userInfoP\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"| \", React.createElement(Moment, {\n          fromNow: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, _this4.getRelativeTime(post.postTime))), (_this4.props.user ? _this4.props.user.username : '') === post.username && React.createElement(Button, {\n          className: \"deleteBtn\",\n          onClick: function onClick() {\n            return _this4.deletePost(post.postID, post.comment);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"hr\", {\n          className: \"hr\",\n          width: \"100%\",\n          color: \"#7986cb\",\n          size: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          className: \"h2ForPostTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"postTitle\",\n          onClick: function onClick() {\n            _this4.props.updateClickedPost(post);\n\n            _this4.ChangeView('/postContent');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, post.title.length > 50 ? post.title.substring(0, 30) + '...' : post.title)), React.createElement(\"p\", {\n          className: \"postContent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, post.content.length > 200 ? post.content.substring(0, 350) + '...' : post.content)))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        className: \"pageButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.buttons.map(function (b, index) {\n        if (b === _this4.state.currentPage) {\n          return React.createElement(Button, {\n            className: \"currentPageButton\",\n            key: index,\n            num: b,\n            variant: \"contained\",\n            onClick: function onClick() {\n              return _this4.updateCurrentPosts(b);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, b);\n        } else if (b === '...') {\n          return React.createElement(Button, {\n            className: \"pageButton\",\n            key: index,\n            num: b,\n            variant: \"contained\",\n            onClick: function onClick() {\n              return _this4.changePageChild.current.handleOpen();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, b);\n        } else {\n          return React.createElement(Button, {\n            className: \"pageButton\",\n            key: index,\n            num: b,\n            variant: \"contained\",\n            onClick: function onClick() {\n              return _this4.updateCurrentPosts(b);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, b);\n        }\n      })));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport { Post as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\Wise-viz\\src\\components\\Post.js"],"names":["React","Button","img","navigate","ChangePageView","Moment","Post","page","props","state","posts","numOfPosts","currentPage","clickedUsername","currentPageNum","numOfPages","currentShownPosts","buttons","getPosts","bind","getPageButtons","updateCurrentPosts","updataPosts","changePageChild","createRef","getRelativeTime","deletePost","postID","comment","data","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","ChangeView","username","items","setState","length","Math","ceil","i","post","tempPageNum","b","updateCurrentPageNum","totalPages","index","time","temp","split","map","url","userEmail","e","target","onerror","src","updateClickedUsername","postTime","user","updateClickedPost","title","substring","content","current","handleOpen","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './component_style/MainPage.css';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport { navigate } from 'react-mini-router';\nimport ChangePageView from './ChangePage';\nimport Moment from 'react-moment';\n\nexport default class Post extends React.Component {\n\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            numOfPosts: 0,\n            currentPage: this.props.clickedUsername === '' ? this.props.currentPageNum : 1,\n            numOfPages: 0,\n            currentShownPosts: [],\n            buttons: [],\n        }\n        this.getPosts = this.getPosts.bind(this);\n        this.getPageButtons = this.getPageButtons.bind(this);\n        this.updateCurrentPosts = this.updateCurrentPosts.bind(this);\n        this.updataPosts = this.updataPosts.bind(this);\n        this.changePageChild = React.createRef();\n        this.getRelativeTime = this.getRelativeTime.bind(this);\n        this.deletePost = this.deletePost.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPosts();\n    }\n\n    deletePost(postID, comment) {\n        let data = {\n            postID: postID,\n            comment: comment\n        }\n        let request = new Request('/api/post-info/delete', {\n            method: 'DELETE',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(() => this.getPosts())\n            .then(() => this.ChangeView('/'));\n    }\n\n    getPosts() {\n\n        let data = { username:this.props.clickedUsername };\n        let request = '';\n\n        if (this.props.clickedUsername === '') {\n            request = new Request('api/post-info/get')\n\n        } else {\n            request = new Request('api/post-info/get-click-user-post', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n        }\n        fetch(request)\n                .then(response => response.json())\n                .then(items => this.setState({ posts:items }))\n                .then(() => {\n                    let numOfPosts = this.state.posts.length;\n                    let numOfPages = Math.ceil(numOfPosts / 3);\n                    if (numOfPages === 0) {\n                        numOfPages = 1;\n                    }\n                    let currentShownPosts = [];\n                    for (let i = 3 * (this.state.currentPage - 1); i < 3 * this.state.currentPage && i < numOfPosts; i++) {\n                        let post = this.state.posts[i];\n                        currentShownPosts[i] = post;\n                    }\n                    this.setState({\n                        numOfPosts: numOfPosts,\n                        numOfPages: numOfPages,\n                        currentShownPosts: currentShownPosts,\n                    });\n                    let tempPageNum = this.props.clickedUsername === '' ? this.props.currentPageNum : 1;\n                    this.getPageButtons(tempPageNum);\n                });\n    }\n\n    updataPosts(b) {\n        let currentShownPosts = [];\n        for (let i = 3 * (b - 1); i < 3 * b && i < this.state.numOfPosts; i++) {\n            let post = this.state.posts[i];\n            currentShownPosts[i] = post;\n        }\n        this.setState({\n            currentShownPosts: currentShownPosts,\n        });\n        this.getPageButtons(b);\n    }\n\n    updateCurrentPosts(b) {\n        this.setState({ currentPage:b });\n        if (this.props.clickedUsername === '') {\n            this.props.updateCurrentPageNum(b);\n        }\n        this.updataPosts(b);\n    }\n\n    getPageButtons(b) {\n        if (b == null) {\n            b = 1;\n        }\n        let totalPages = this.state.numOfPages;\n        let currentPage = b;\n        let buttons = [];\n        buttons[0] = 1;\n        let index = 1;\n        for (let i = currentPage - 2 > 1 ? currentPage - 2 : 2 ; i <= currentPage + 2 && i <= totalPages; i++) {\n            if (buttons[index - 1] + 1 !== i) {\n                buttons[index] = '...';\n                index++;\n            }\n            buttons[index] = i;\n            index++;\n        }\n        if (buttons[index - 1] !== totalPages) {\n            if (buttons[index - 1] !== totalPages - 1) {\n                buttons[index] = '...';\n                buttons[index + 1] = totalPages;\n            } else {\n                buttons[index] = totalPages;\n            }\n        }\n        this.setState({ buttons:buttons });\n    }\n\n    getRelativeTime(time) {\n        if (time) {\n            let temp = time.split(' ');\n            return temp[0] + \"T\" + temp[1] + \"-0000\";\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"grid\" method=\"post\" action=\"\">\n                    <br/>\n                    <ChangePageView ref={this.changePageChild} choosePage={this.updateCurrentPosts} totalPages={this.state.numOfPages} />\n                    {this.state.currentShownPosts.map((post, index) => (\n                        <article className=\"postArticle\" key={index}>\n                            <fieldset className=\"postFieldset\">\n                                <div className=\"userInfoDiv\">\n                                    <img className=\"roundedCircleArticleImg\"\n                                        src={post.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + post.url + \"/profile_picture/\"\n                                            + post.userEmail + '/' + post.userEmail + \".jpg\" : img}\n                                        alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                                    </img>\n                                    <div className=\"postContentLayout\">\n                                        <div className=\"postProfile\">\n                                            <Button className=\"userInfoPUsername\" onClick={() => {\n                                                    this.props.updateClickedUsername(post.username);\n                                                }}>{post.username}</Button>\n                                            <p className=\"userInfoP\">| <Moment fromNow>{this.getRelativeTime(post.postTime)}</Moment></p>\n                                            { (this.props.user ? this.props.user.username : '') === post.username && (\n                                                <Button className=\"deleteBtn\" onClick={() => this.deletePost(post.postID, post.comment)}>Delete</Button>\n                                            )}\n                                        </div>\n                                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                                        <h2 className=\"h2ForPostTitle\"><Button className=\"postTitle\" onClick={() => {\n                                            this.props.updateClickedPost(post);\n                                            this.ChangeView('/postContent');\n                                        }}>{post.title.length > 50 ? post.title.substring(0, 30) + '...' : post.title}</Button></h2>\n                                        <p className=\"postContent\">{post.content.length > 200 ? post.content.substring(0, 350) + '...' : post.content}</p>\n                                    </div>\n                                </div>\n                            </fieldset>\n                            <br/>\n                        </article>\n                    ))}\n                </form>\n                <div className=\"pageButtons\">\n                    {this.state.buttons.map((b, index) => {\n                        if (b === this.state.currentPage) {\n                            return (<Button className=\"currentPageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                        else if (b === '...') {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.changePageChild.current.handleOpen()}>{b}</Button>)\n                        }\n                        else {\n                            return (<Button className=\"pageButton\" key={index} num={b} variant=\"contained\" onClick={() => this.updateCurrentPosts(b)}>{b}</Button>)\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}