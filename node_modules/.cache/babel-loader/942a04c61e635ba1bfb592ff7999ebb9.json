{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\User.js\";\nimport React from 'react';\nimport { Button, TextField, IconButton } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'axios';\n/**\n *\n *\n */\n\nvar User =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(User, _React$Component);\n\n  _createClass(User, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }]);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.userData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          userData: oldData,\n          error: false,\n          oldPasswordRequire: false,\n          usernameUnique: true,\n          passwordError: false,\n          confirmPasswordError: _this.state.userData.newPassword === _this.state.userData.confirmPassword ? false : _this.state.confirmPasswordError,\n          newPasswordError: _this.state.userData.newPassword !== '' || _this.state.userData.oldPassword === '' ? false : _this.state.newPasswordError\n        });\n      };\n    };\n\n    _this.handleEventChangeForPicture = function () {\n      return function (event) {\n        _this.setState({\n          picture: event.target.files[0]\n        });\n      };\n    };\n\n    _this.handleClickShowPassword = function () {\n      _this.setState({\n        showPassword: !_this.state.showPassword\n      });\n    };\n\n    _this.uploadPicture =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var formData, config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.state.picture !== '') {\n                formData = new FormData();\n                formData.append('file', _this.state.picture);\n                formData.append('pictureID', _this.props.user.email);\n                config = {\n                  headers: {\n                    'content-type': 'multipart/form-data'\n                  }\n                };\n                axios.post(\"api/picture-info/update\", formData).then(function (response) {\n                  alert(\"The file is successfully uploaded\");\n                }).catch(function (error) {});\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      userData: {\n        username: '',\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      item: [],\n      showPassword: false,\n      usernameUnique: true,\n      passwordError: false,\n      newPasswordError: false,\n      confirmPasswordError: false,\n      oldPasswordRequire: false,\n      errorInfo: 'The username is registered by the other person!',\n      picture: ''\n    };\n    _this.updateUserInfo = _this.updateUserInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.existUsername = _this.existUsername.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"updateUserInfo\",\n    value: function updateUserInfo() {\n      var _this2 = this;\n\n      if (this.state.userData.oldPassword !== this.props.user.password && this.state.userData.oldPassword !== '') {\n        this.setState({\n          passwordError: true\n        });\n      } else if (this.state.userData.oldPassword === '' && this.state.userData.newPassword !== '') {\n        this.setState({\n          oldPasswordRequire: true\n        });\n      } else if (this.state.userData.oldPassword !== '' && this.state.userData.newPassword === '') {\n        this.setState({\n          newPasswordError: true\n        });\n      } else if (this.state.userData.newPassword !== this.state.userData.confirmPassword) {\n        this.setState({\n          confirmPasswordError: true\n        });\n      } else if (!this.state.passwordError && !this.state.oldPasswordRequire && !this.state.newPasswordError && !this.state.confirmPasswordError) {\n        var data = {\n          userName: this.state.userData.username\n        };\n        var request = new Request('api/user-info/check-username-email-unique', {\n          method: 'POST',\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify(data)\n        });\n        fetch(request).then(function (response) {\n          return response.json();\n        }).then(function (item) {\n          return _this2.setState({\n            item: item\n          });\n        }).then(function () {\n          var data = {\n            email: _this2.props.user.email,\n            userName: _this2.state.userData.username === '' ? _this2.props.user.username : _this2.state.userData.username,\n            password: _this2.state.userData.newPassword === '' ? _this2.props.user.password : _this2.state.userData.newPassword,\n            pictureID: _this2.state.userData.pictureID\n          };\n\n          if (!_this2.existUsername(data.userName)) {\n            _this2.uploadPicture();\n\n            var _request = new Request('api/user-info/update-user-info', {\n              method: 'PUT',\n              headers: new Headers({\n                'Content-Type': 'application/json'\n              }),\n              body: JSON.stringify(data)\n            });\n\n            fetch(_request).then(function (response) {\n              return response.json();\n            }).then(function () {\n              _this2.props.onSuccess(data.email, data.userName, data.password, _this2.props.user.url);\n\n              _this2.ChangeView('/');\n            });\n          } else {\n            _this2.setState({\n              usernameUnique: false\n            });\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"existUsername\",\n    value: function existUsername(username) {\n      var exist = false;\n\n      for (var itemInd in this.state.item) {\n        var each = this.state.item[itemInd];\n\n        if (each.userName === username && each.email !== this.props.user.email) {\n          exist = true;\n        }\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"postContentLayout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"roundedCircleArticleImg\",\n        src: this.props.user.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\" + this.props.user.email + '/' + this.props.user.email + \".jpg\" : img,\n        alt: \"user\",\n        onError: function onError(e) {\n          e.target.onerror = null;\n          e.target.src = img;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"postProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.props.user.email))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"User Info\"), React.createElement(\"hr\", {\n        className: \"hr\",\n        width: \"100%\",\n        color: \"#7986cb\",\n        size: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Username (update username by typing new name below) :\"), React.createElement(TextField, {\n        error: !this.state.usernameUnique,\n        label: this.state.userData.username === '' ? this.props.user.username : this.state.usernameUnique ? \"new username\" : this.state.errorInfo,\n        value: this.state.userData.username,\n        className: \"postTitleText\",\n        onChange: this.handleEventChange('username'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Change Password:\"), React.createElement(TextField, {\n        error: this.state.passwordError || this.state.oldPasswordRequire,\n        label: this.state.passwordError ? \"Old password is incorrect!\" : \"Old Password\",\n        value: this.state.userData.oldPassword,\n        className: \"postTitleText\",\n        onChange: this.handleEventChange('oldPassword'),\n        type: this.state.showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        error: this.state.newPasswordError,\n        label: this.state.newPasswordError ? \"Require new password\" : \"New Password\",\n        value: this.state.userData.Password,\n        className: \"postTitleText\",\n        onChange: this.handleEventChange('newPassword'),\n        type: this.state.showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        error: this.state.confirmPasswordError,\n        label: this.state.confirmPasswordError ? \"New password and confirm password are different!\" : \"Confirm Password\",\n        value: this.state.userData.confirmPassword,\n        className: \"postTitleText\",\n        onChange: this.handleEventChange('confirmPassword'),\n        type: this.state.showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Update profile picture :\"), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleEventChangeForPicture(),\n        accept: \"image/png, image/jpeg, image/gif, image/jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"postButtons\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.ChangeView('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"postButtons\",\n        onClick: function onClick() {\n          return _this3.updateUserInfo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Update\"))));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport { User as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\User.js"],"names":["React","Button","TextField","IconButton","navigate","img","InputAdornment","Visibility","VisibilityOff","axios","User","page","props","handleEventChange","field","event","oldData","state","userData","target","value","setState","error","oldPasswordRequire","usernameUnique","passwordError","confirmPasswordError","newPassword","confirmPassword","newPasswordError","oldPassword","handleEventChangeForPicture","picture","files","handleClickShowPassword","showPassword","uploadPicture","formData","FormData","append","user","email","config","headers","post","then","response","alert","catch","username","item","errorInfo","updateUserInfo","bind","existUsername","password","data","userName","request","Request","method","Headers","body","JSON","stringify","fetch","json","pictureID","onSuccess","url","ChangeView","err","console","log","exist","itemInd","each","e","onerror","src","endAdornment","Password","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,QAA8C,mBAA9C;AACA,OAAO,gCAAP;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,GAAP,MAAgB,0DAAhB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;IAIqBC,I;;;;;;;+BACNC,I,EAAM;AACbP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACH;;;AAED,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UA0BnBC,iBA1BmB,GA0BC,UAAAC,KAAK;AAAA,aAAI,UAAAC,KAAK,EAAI;AAClC,YAAMC,OAAO,GAAG,MAAKC,KAAL,CAAWC,QAA3B;AACAF,QAAAA,OAAO,CAACF,KAAD,CAAP,GAAiBC,KAAK,CAACI,MAAN,CAAaC,KAA9B;;AACA,cAAKC,QAAL,CAAc;AACVH,UAAAA,QAAQ,EAAEF,OADA;AAEVM,UAAAA,KAAK,EAAE,KAFG;AAGVC,UAAAA,kBAAkB,EAAE,KAHV;AAIVC,UAAAA,cAAc,EAAE,IAJN;AAKVC,UAAAA,aAAa,EAAE,KALL;AAMVC,UAAAA,oBAAoB,EAAG,MAAKT,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,MAAKV,KAAL,CAAWC,QAAX,CAAoBU,eAAxD,GACnB,KADmB,GACX,MAAKX,KAAL,CAAWS,oBAPb;AAQVG,UAAAA,gBAAgB,EAAG,MAAKZ,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,EAApC,IAA0C,MAAKV,KAAL,CAAWC,QAAX,CAAoBY,WAApB,KAAoC,EAA9E,GACb,KADa,GACL,MAAKb,KAAL,CAAWY;AATf,SAAd;AAWH,OAdwB;AAAA,KA1BN;;AAAA,UA0CnBE,2BA1CmB,GA0CW;AAAA,aAAM,UAAAhB,KAAK,EAAI;AACzC,cAAKM,QAAL,CAAc;AAAEW,UAAAA,OAAO,EAAEjB,KAAK,CAACI,MAAN,CAAac,KAAb,CAAmB,CAAnB;AAAX,SAAd;AACH,OAF6B;AAAA,KA1CX;;AAAA,UA8CnBC,uBA9CmB,GA8CO,YAAM;AAC5B,YAAKb,QAAL,CAAc;AAAEc,QAAAA,YAAY,EAAE,CAAC,MAAKlB,KAAL,CAAWkB;AAA5B,OAAd;AACH,KAhDkB;;AAAA,UAkDnBC,aAlDmB;AAAA;AAAA;AAAA;AAAA,6BAkDH;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,kBAAI,MAAKnB,KAAL,CAAWe,OAAX,KAAuB,EAA3B,EAA+B;AACvBK,gBAAAA,QADuB,GACZ,IAAIC,QAAJ,EADY;AAE3BD,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,MAAKtB,KAAL,CAAWe,OAAnC;AACAK,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,MAAK3B,KAAL,CAAW4B,IAAX,CAAgBC,KAA7C;AAEMC,gBAAAA,MALqB,GAKZ;AACXC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX;AADE,iBALY;AAU3BlC,gBAAAA,KAAK,CAACmC,IAAN,CAAW,yBAAX,EAAqCP,QAArC,EACKQ,IADL,CACU,UAACC,QAAD,EAAc;AAChBC,kBAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,iBAHL,EAGOC,KAHP,CAGa,UAAC1B,KAAD,EAAW,CACvB,CAJD;AAKH;;AAhBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlDG;AAEf,UAAKL,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AACN+B,QAAAA,QAAQ,EAAE,EADJ;AAENnB,QAAAA,WAAW,EAAE,EAFP;AAGNH,QAAAA,WAAW,EAAE,EAHP;AAINC,QAAAA,eAAe,EAAE;AAJX,OADD;AAOTsB,MAAAA,IAAI,EAAE,EAPG;AAQTf,MAAAA,YAAY,EAAE,KARL;AASTX,MAAAA,cAAc,EAAE,IATP;AAUTC,MAAAA,aAAa,EAAE,KAVN;AAWTI,MAAAA,gBAAgB,EAAE,KAXT;AAYTH,MAAAA,oBAAoB,EAAE,KAZb;AAaTH,MAAAA,kBAAkB,EAAE,KAbX;AAcT4B,MAAAA,SAAS,EAAE,iDAdF;AAeTnB,MAAAA,OAAO,EAAE;AAfA,KAAb;AAiBA,UAAKoB,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AApBe;AAqBlB;;;;wCAEmB,CACnB;;;qCA6CgB;AAAA;;AACb,UAAI,KAAKpC,KAAL,CAAWC,QAAX,CAAoBY,WAApB,KAAoC,KAAKlB,KAAL,CAAW4B,IAAX,CAAgBe,QAApD,IAAgE,KAAKtC,KAAL,CAAWC,QAAX,CAAoBY,WAApB,KAAoC,EAAxG,EAA4G;AACxG,aAAKT,QAAL,CAAc;AAAEI,UAAAA,aAAa,EAAC;AAAhB,SAAd;AACH,OAFD,MAGK,IAAI,KAAKR,KAAL,CAAWC,QAAX,CAAoBY,WAApB,KAAoC,EAApC,IAA0C,KAAKb,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,EAAlF,EAAsF;AACvF,aAAKN,QAAL,CAAc;AAAEE,UAAAA,kBAAkB,EAAC;AAArB,SAAd;AACH,OAFI,MAGA,IAAI,KAAKN,KAAL,CAAWC,QAAX,CAAoBY,WAApB,KAAoC,EAApC,IAA0C,KAAKb,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,EAAlF,EAAsF;AACvF,aAAKN,QAAL,CAAc;AAAEQ,UAAAA,gBAAgB,EAAC;AAAnB,SAAd;AACH,OAFI,MAGA,IAAI,KAAKZ,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,eAA5D,EAA4E;AAC7E,aAAKP,QAAL,CAAc;AAAEK,UAAAA,oBAAoB,EAAE;AAAxB,SAAd;AACH,OAFI,MAGA,IAAI,CAAC,KAAKT,KAAL,CAAWQ,aAAZ,IAA6B,CAAC,KAAKR,KAAL,CAAWM,kBAAzC,IACF,CAAC,KAAKN,KAAL,CAAWY,gBADV,IAC8B,CAAC,KAAKZ,KAAL,CAAWS,oBAD9C,EACoE;AAErE,YAAI8B,IAAI,GAAG;AACPC,UAAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWC,QAAX,CAAoB+B;AADvB,SAAX;AAGA,YAAIS,OAAO,GAAG,IAAIC,OAAJ,CAAY,2CAAZ,EAAyD;AACnEC,UAAAA,MAAM,EAAE,MAD2D;AAEnEjB,UAAAA,OAAO,EAAE,IAAIkB,OAAJ,CAAY;AAAE,4BAAgB;AAAlB,WAAZ,CAF0D;AAGnEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAH6D,SAAzD,CAAd;AAKAS,QAAAA,KAAK,CAACP,OAAD,CAAL,CACKb,IADL,CACU,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACoB,IAAT,EAAJ;AAAA,SADlB,EAEKrB,IAFL,CAEU,UAAAK,IAAI;AAAA,iBAAI,MAAI,CAAC7B,QAAL,CAAc;AAAC6B,YAAAA,IAAI,EAAJA;AAAD,WAAd,CAAJ;AAAA,SAFd,EAGKL,IAHL,CAGU,YAAM;AACR,cAAIW,IAAI,GAAG;AACPf,YAAAA,KAAK,EAAE,MAAI,CAAC7B,KAAL,CAAW4B,IAAX,CAAgBC,KADhB;AAEPgB,YAAAA,QAAQ,EAAE,MAAI,CAACxC,KAAL,CAAWC,QAAX,CAAoB+B,QAApB,KAAiC,EAAjC,GAAsC,MAAI,CAACrC,KAAL,CAAW4B,IAAX,CAAgBS,QAAtD,GAAiE,MAAI,CAAChC,KAAL,CAAWC,QAAX,CAAoB+B,QAFxF;AAGPM,YAAAA,QAAQ,EAAE,MAAI,CAACtC,KAAL,CAAWC,QAAX,CAAoBS,WAApB,KAAoC,EAApC,GAAyC,MAAI,CAACf,KAAL,CAAW4B,IAAX,CAAgBe,QAAzD,GAAoE,MAAI,CAACtC,KAAL,CAAWC,QAAX,CAAoBS,WAH3F;AAIPwC,YAAAA,SAAS,EAAE,MAAI,CAAClD,KAAL,CAAWC,QAAX,CAAoBiD;AAJxB,WAAX;;AAMA,cAAI,CAAC,MAAI,CAACb,aAAL,CAAmBE,IAAI,CAACC,QAAxB,CAAL,EAAwC;AACpC,YAAA,MAAI,CAACrB,aAAL;;AACA,gBAAIsB,QAAO,GAAG,IAAIC,OAAJ,CAAY,gCAAZ,EAA8C;AACxDC,cAAAA,MAAM,EAAE,KADgD;AAExDjB,cAAAA,OAAO,EAAE,IAAIkB,OAAJ,CAAY;AAAE,gCAAgB;AAAlB,eAAZ,CAF+C;AAGxDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAHkD,aAA9C,CAAd;;AAMAS,YAAAA,KAAK,CAACP,QAAD,CAAL,CACCb,IADD,CACM,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACoB,IAAT,EAAJ;AAAA,aADd,EAECrB,IAFD,CAEM,YAAM;AACR,cAAA,MAAI,CAACjC,KAAL,CAAWwD,SAAX,CAAqBZ,IAAI,CAACf,KAA1B,EAAiCe,IAAI,CAACC,QAAtC,EAAgDD,IAAI,CAACD,QAArD,EAA+D,MAAI,CAAC3C,KAAL,CAAW4B,IAAX,CAAgB6B,GAA/E;;AACA,cAAA,MAAI,CAACC,UAAL,CAAgB,GAAhB;AACH,aALD;AAMH,WAdD,MAcO;AACH,YAAA,MAAI,CAACjD,QAAL,CAAc;AAAEG,cAAAA,cAAc,EAAC;AAAjB,aAAd;AACH;AACJ,SA3BL,EA4BKwB,KA5BL,CA4BW,UAAAuB,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SA5Bd;AA6BH;AACJ;;;kCAEatB,Q,EAAU;AACpB,UAAIyB,KAAK,GAAG,KAAZ;;AACA,WAAK,IAAIC,OAAT,IAAoB,KAAK1D,KAAL,CAAWiC,IAA/B,EAAqC;AACjC,YAAI0B,IAAI,GAAG,KAAK3D,KAAL,CAAWiC,IAAX,CAAgByB,OAAhB,CAAX;;AACA,YAAIC,IAAI,CAACnB,QAAL,KAAkBR,QAAlB,IAA8B2B,IAAI,CAACnC,KAAL,KAAe,KAAK7B,KAAL,CAAW4B,IAAX,CAAgBC,KAAjE,EAAwE;AACpEiC,UAAAA,KAAK,GAAG,IAAR;AACH;AACJ;;AACD,aAAOA,KAAP;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AACI,QAAA,GAAG,EAAE,KAAK9D,KAAL,CAAW4B,IAAX,CAAgB6B,GAAhB,GAAsB,yHAAyH,KAAKzD,KAAL,CAAW4B,IAAX,CAAgB6B,GAAzI,GAA+I,mBAA/I,GACrB,KAAKzD,KAAL,CAAW4B,IAAX,CAAgBC,KADK,GACG,GADH,GACS,KAAK7B,KAAL,CAAW4B,IAAX,CAAgBC,KADzB,GACiC,MADvD,GACgEpC,GAFzE;AAGI,QAAA,GAAG,EAAC,MAHR;AAGe,QAAA,OAAO,EAAE,iBAACwE,CAAD,EAAK;AAACA,UAAAA,CAAC,CAAC1D,MAAF,CAAS2D,OAAT,GAAmB,IAAnB;AAAyBD,UAAAA,CAAC,CAAC1D,MAAF,CAAS4D,GAAT,GAAa1E,GAAb;AAAiB,SAHxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EASI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKO,KAAL,CAAW4B,IAAX,CAAgBC,KAArB,CADJ,CATJ,CADJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdJ,EAeI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,IAAI,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAhBJ,EAiBI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,CAAC,KAAKxB,KAAL,CAAWO,cADvB;AAEI,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoB+B,QAApB,KAAiC,EAAjC,GACD,KAAKrC,KAAL,CAAW4B,IAAX,CAAgBS,QADf,GAC2B,KAAKhC,KAAL,CAAWO,cAAX,GAA4B,cAA5B,GAA6C,KAAKP,KAAL,CAAWkC,SAH9F;AAII,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,QAAX,CAAoB+B,QAJ/B;AAKI,QAAA,SAAS,EAAC,eALd;AAMI,QAAA,QAAQ,EAAE,KAAKpC,iBAAL,CAAuB,UAAvB,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,EA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA1BJ,EA2BI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWQ,aAAX,IAA6B,KAAKR,KAAL,CAAWM,kBADnD;AAEI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ,aAAX,GAA2B,4BAA3B,GAA0D,cAFrE;AAGI,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBY,WAH/B;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,QAAQ,EAAE,KAAKjB,iBAAL,CAAuB,aAAvB,CALd;AAMI,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWkB,YAAX,GAA0B,MAA1B,GAAmC,UAN7C;AAOI,QAAA,UAAU,EAAE;AACR6C,UAAAA,YAAY,EACR,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AACI,YAAA,IAAI,EAAC,KADT;AAEI,0BAAW,4BAFf;AAGI,YAAA,OAAO,EAAE,KAAK9C,uBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKK,KAAKjB,KAAL,CAAWkB,YAAX,GAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,GAA8C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALnD,CADJ;AAFI,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BJ,EAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDJ,EAiDI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWY,gBADtB;AAEI,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY,gBAAX,GAA8B,sBAA9B,GAAuD,cAFlE;AAGI,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,QAAX,CAAoB+D,QAH/B;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,QAAQ,EAAE,KAAKpE,iBAAL,CAAuB,aAAvB,CALd;AAMI,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWkB,YAAX,GAA0B,MAA1B,GAAmC,UAN7C;AAOI,QAAA,UAAU,EAAE;AACR6C,UAAAA,YAAY,EACR,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AACI,YAAA,IAAI,EAAC,KADT;AAEI,0BAAW,4BAFf;AAGI,YAAA,OAAO,EAAE,KAAK9C,uBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKK,KAAKjB,KAAL,CAAWkB,YAAX,GAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,GAA8C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALnD,CADJ;AAFI,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDJ,EAsEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtEJ,EAuEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWS,oBADtB;AAEI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWS,oBAAX,GAAkC,kDAAlC,GAAuF,kBAFlG;AAGI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,QAAX,CAAoBU,eAH/B;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,QAAQ,EAAE,KAAKf,iBAAL,CAAuB,iBAAvB,CALd;AAMI,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWkB,YAAX,GAA0B,MAA1B,GAAmC,UAN7C;AAOI,QAAA,UAAU,EAAE;AACR6C,UAAAA,YAAY,EACR,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AACI,YAAA,IAAI,EAAC,KADT;AAEI,0BAAW,4BAFf;AAGI,YAAA,OAAO,EAAE,KAAK9C,uBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKK,KAAKjB,KAAL,CAAWkB,YAAX,GAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,GAA8C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALnD,CADJ;AAFI,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvEJ,EA4FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5FJ,EA4FU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5FV,EA6FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCA7FJ,EA8FI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKJ,2BAAL,EAA7B;AAAiE,QAAA,MAAM,EAAC,6CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9FJ,EA+FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/FJ,EA+FS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/FT,EAgGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,SAAS,EAAC,aAAxD;AAAsE,QAAA,IAAI,EAAC,QAA3E;AAAoF,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACuC,UAAL,CAAgB,GAAhB,CAAN;AAAA,SAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhGJ,EAiGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAC,aAAtD;AAAoE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAClB,cAAL,EAAN;AAAA,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjGJ,CADJ,CADJ,CADJ;AAyGH;;;;EAvP6BpD,KAAK,CAACkF,S;;SAAnBxE,I","sourcesContent":["import React from 'react';\nimport { Button, TextField, IconButton } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport img from './resources/profile_pictures/default_profile_picture.png';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'axios';\n\n/**\n *\n *\n */\nexport default class User extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                username: '',\n                oldPassword: '',\n                newPassword: '',\n                confirmPassword: '',\n            },\n            item: [],\n            showPassword: false,\n            usernameUnique: true,\n            passwordError: false,\n            newPasswordError: false,\n            confirmPasswordError: false,\n            oldPasswordRequire: false,\n            errorInfo: 'The username is registered by the other person!',\n            picture: '',\n        };\n        this.updateUserInfo = this.updateUserInfo.bind(this);\n        this.existUsername = this.existUsername.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            userData: oldData,\n            error: false,\n            oldPasswordRequire: false,\n            usernameUnique: true,\n            passwordError: false,\n            confirmPasswordError: (this.state.userData.newPassword === this.state.userData.confirmPassword ?\n                false : this.state.confirmPasswordError),\n            newPasswordError: (this.state.userData.newPassword !== '' || this.state.userData.oldPassword === ''\n                ? false : this.state.newPasswordError),\n        });\n    }\n\n    handleEventChangeForPicture = () => event => {\n        this.setState({ picture: event.target.files[0] });\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    uploadPicture = async () => {\n        if (this.state.picture !== '') {\n            let formData = new FormData();\n            formData.append('file', this.state.picture);\n            formData.append('pictureID', this.props.user.email);\n\n            const config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            };\n            axios.post(\"api/picture-info/update\",formData)\n                .then((response) => {\n                    alert(\"The file is successfully uploaded\");\n                }).catch((error) => {\n            });\n        }\n    }\n\n    updateUserInfo() {\n        if (this.state.userData.oldPassword !== this.props.user.password && this.state.userData.oldPassword !== '') {\n            this.setState({ passwordError:true });\n        }\n        else if (this.state.userData.oldPassword === '' && this.state.userData.newPassword !== '') {\n            this.setState({ oldPasswordRequire:true });\n        }\n        else if (this.state.userData.oldPassword !== '' && this.state.userData.newPassword === '') {\n            this.setState({ newPasswordError:true });\n        }\n        else if (this.state.userData.newPassword !== this.state.userData.confirmPassword){\n            this.setState({ confirmPasswordError: true });\n        }\n        else if (!this.state.passwordError && !this.state.oldPasswordRequire\n            && !this.state.newPasswordError && !this.state.confirmPasswordError) {\n\n            let data = {\n                userName: this.state.userData.username,\n            };\n            let request = new Request('api/user-info/check-username-email-unique', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n            fetch(request)\n                .then(response => response.json())\n                .then(item => this.setState({item}))\n                .then(() => {\n                    let data = {\n                        email: this.props.user.email,\n                        userName: this.state.userData.username === '' ? this.props.user.username : this.state.userData.username,\n                        password: this.state.userData.newPassword === '' ? this.props.user.password : this.state.userData.newPassword,\n                        pictureID: this.state.userData.pictureID,\n                    };\n                    if (!this.existUsername(data.userName)) {\n                        this.uploadPicture();\n                        let request = new Request('api/user-info/update-user-info', {\n                            method: 'PUT',\n                            headers: new Headers({ 'Content-Type': 'application/json' }),\n                            body: JSON.stringify(data)\n                        });\n\n                        fetch(request)\n                        .then(response => response.json())\n                        .then(() => {\n                            this.props.onSuccess(data.email, data.userName, data.password, this.props.user.url);\n                            this.ChangeView('/');\n                        });\n                    } else {\n                        this.setState({ usernameUnique:false });\n                    }\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    existUsername(username) {\n        let exist = false;\n        for (let itemInd in this.state.item) {\n            let each = this.state.item[itemInd];\n            if (each.userName === username && each.email !== this.props.user.email) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <fieldset className=\"fieldset\">\n                    <form>\n                        <div className=\"postContentLayout\">\n                            {\n\n                            }\n                            <img className=\"roundedCircleArticleImg\"\n                                src={this.props.user.url ? \"https://res.cloudinary.com/cjyjimmy520/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/\" + this.props.user.url + \"/profile_picture/\"\n                                    + this.props.user.email + '/' + this.props.user.email + \".jpg\" : img}\n                                alt=\"user\" onError={(e)=>{e.target.onerror = null; e.target.src=img}}>\n                            </img>\n                            <div className=\"postProfile\">\n                                <h2>{this.props.user.email}</h2>\n                            </div>\n                        </div>\n                        <h2>User Info</h2>\n                        <hr className=\"hr\" width=\"100%\" color=\"#7986cb\" size={3} />\n                        <h2>Username (update username by typing new name below) :</h2>\n                        <TextField\n                            error={!this.state.usernameUnique}\n                            label={this.state.userData.username === ''\n                                ? this.props.user.username : (this.state.usernameUnique ? \"new username\" : this.state.errorInfo)}\n                            value={this.state.userData.username}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('username')}\n                        />\n                        <br />\n                        <h2>Change Password:</h2>\n                        <TextField\n                            error={this.state.passwordError  || this.state.oldPasswordRequire}\n                            label={this.state.passwordError ? \"Old password is incorrect!\" : \"Old Password\"}\n                            value={this.state.userData.oldPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('oldPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.newPasswordError}\n                            label={this.state.newPasswordError ? \"Require new password\" : \"New Password\"}\n                            value={this.state.userData.Password}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('newPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br />\n                        <TextField\n                            error={this.state.confirmPasswordError}\n                            label={this.state.confirmPasswordError ? \"New password and confirm password are different!\" : \"Confirm Password\"}\n                            value={this.state.userData.confirmPassword}\n                            className=\"postTitleText\"\n                            onChange={this.handleEventChange('confirmPassword')}\n                            type={this.state.showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                        >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                              ),\n                            }}\n                        />\n                        <br /><br />\n                        <h2>Update profile picture :</h2>\n                        <input type=\"file\" onChange={this.handleEventChangeForPicture()} accept=\"image/png, image/jpeg, image/gif, image/jpg\"/>\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" type=\"button\" onClick={() => this.ChangeView('/')}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={() => this.updateUserInfo()}>Update</Button>\n                    </form>\n                </fieldset>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}