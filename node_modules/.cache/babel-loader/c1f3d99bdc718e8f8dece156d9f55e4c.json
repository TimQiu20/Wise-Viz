{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport GetPasswordDialogView from './GetPasswordDialog';\n/**\n *\n *\n */\n\nexport default class Register extends React.Component {\n  ChangeView(page) {\n    navigate(page);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleEventChange = field => event => {\n      const oldData = this.state.userData;\n      oldData[field] = event.target.value;\n      this.setState({\n        newUserData: oldData\n      });\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    };\n\n    this.state = {\n      userData: {\n        email: '',\n        password: '',\n        erroInfo: ''\n      },\n      items: [],\n      showPassword: false\n    };\n    this.login = this.login.bind(this);\n    this.existEmailAndPasswordCorrect = this.existEmailAndPasswordCorrect.bind(this);\n    this.invalidNewUserErrorChild = React.createRef();\n    this.checkUserInfoAndLogin = this.checkUserInfoAndLogin.bind(this);\n    this.onSuccess = this.onSuccess.bind(this);\n    this.GetPasswordChild = React.createRef();\n  }\n\n  onSuccess(email, username, password, url) {\n    this.props.onSuccess(email, username, password, url);\n    this.ChangeView('/');\n  }\n\n  componentDidMount() {}\n\n  checkUserInfoAndLogin() {\n    let data = {\n      email: this.state.userData.email.toLowerCase()\n    };\n    let request = new Request('api/user-info/check-email', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    fetch(request).then(response => response.json()).then(items => this.setState({\n      items\n    })).then(event => {\n      let data = {\n        email: this.state.userData.email.toLowerCase(),\n        password: this.state.userData.password\n      };\n\n      if (this.existEmailAndPasswordCorrect(data.email, data.password)) {\n        this.onSuccess(data.email, this.state.items[0].userName, this.state.items[0].password, this.state.items[0].url);\n      } else {\n        let erroInfo = '';\n\n        if (data.userName === '') {\n          erroInfo = 'Email cannot be empty!';\n        } else {\n          erroInfo = 'The email is not exist or the password is incorrect!';\n        }\n\n        this.setState({\n          userData: {\n            email: data.email,\n            password: data.password,\n            erroInfo: erroInfo\n          }\n        });\n        this.invalidNewUserErrorChild.current.handleOpen();\n        this.setState({\n          userData: {\n            email: '',\n            password: '',\n            erroInfo: this.state.userData.erroInfo\n          }\n        });\n      }\n    }).catch(err => console.log(err));\n  }\n\n  existEmailAndPasswordCorrect(email, password) {\n    let exist = false;\n\n    for (let itemInd in this.state.items) {\n      let each = this.state.items[itemInd];\n\n      if (each.email === email && each.password === password) {\n        exist = true;\n      }\n    }\n\n    return exist;\n  }\n\n  login(event) {\n    event.preventDefault();\n    this.checkUserInfoAndLogin();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"newUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(InvalidNewUserView, {\n      ref: this.invalidNewUserErrorChild,\n      errInfo: this.state.userData.erroInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(GetPasswordDialogView, {\n      ref: this.GetPasswordChild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"title\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"eventForm\",\n      onSubmit: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      label: \"User Email\",\n      margin: \"dense\",\n      type: \"email\",\n      className: \"registerText\",\n      value: this.state.userData.email,\n      onChange: this.handleEventChange('email'),\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      label: \"Password\",\n      type: this.state.showPassword ? 'text' : 'password',\n      margin: \"dense\",\n      className: \"registerText\",\n      value: this.state.userData.password,\n      onChange: this.handleEventChange('password'),\n      InputLabelProps: {\n        shrink: true\n      },\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      className: \"buttons\",\n      type: \"button\",\n      onClick: () => this.ChangeView('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      className: \"buttons\",\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"forgetPassword\",\n      onClick: () => this.GetPasswordChild.current.handleOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Forget password?\"), React.createElement(\"p\", {\n      className: \"forgetPassword\",\n      onClick: () => this.ChangeView('/register'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\Login.js"],"names":["React","IconButton","Button","TextField","navigate","InvalidNewUserView","InputAdornment","Visibility","VisibilityOff","GetPasswordDialogView","Register","Component","ChangeView","page","constructor","props","handleEventChange","field","event","oldData","state","userData","target","value","setState","newUserData","handleClickShowPassword","showPassword","email","password","erroInfo","items","login","bind","existEmailAndPasswordCorrect","invalidNewUserErrorChild","createRef","checkUserInfoAndLogin","onSuccess","GetPasswordChild","username","url","componentDidMount","data","toLowerCase","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","userName","current","handleOpen","catch","err","console","log","exist","itemInd","each","preventDefault","render","shrink","endAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport GetPasswordDialogView from './GetPasswordDialog';\n\n/**\n *\n *\n */\nexport default class Register extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                email: '',\n                password: '',\n                erroInfo: ''\n            },\n            items: [],\n            showPassword: false,\n        };\n        this.login = this.login.bind(this);\n        this.existEmailAndPasswordCorrect = this.existEmailAndPasswordCorrect.bind(this);\n        this.invalidNewUserErrorChild = React.createRef();\n        this.checkUserInfoAndLogin = this.checkUserInfoAndLogin.bind(this);\n        this.onSuccess = this.onSuccess.bind(this);\n        this.GetPasswordChild = React.createRef();\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    onSuccess(email, username, password, url) {\n        this.props.onSuccess(email, username, password, url);\n        this.ChangeView('/');\n    }\n\n    componentDidMount() {\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    checkUserInfoAndLogin() {\n        let data = {\n            email: this.state.userData.email.toLowerCase(),\n        };\n        let request = new Request('api/user-info/check-email', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(items => this.setState({items}))\n            .then((event) => {\n                let data = {\n                    email: this.state.userData.email.toLowerCase(),\n                    password: this.state.userData.password\n                };\n                if (this.existEmailAndPasswordCorrect(data.email, data.password)) {\n                    this.onSuccess(data.email, this.state.items[0].userName, this.state.items[0].password, this.state.items[0].url);\n                } else {\n                    let erroInfo = '';\n                    if (data.userName === '') {\n                        erroInfo = 'Email cannot be empty!';\n                    }\n                    else {\n                        erroInfo = 'The email is not exist or the password is incorrect!';\n                    }\n                    this.setState({ userData: {\n                        email: data.email,\n                        password: data.password,\n                        erroInfo: erroInfo\n                    }});\n                    this.invalidNewUserErrorChild.current.handleOpen();\n                    this.setState({ userData: {\n                        email: '',\n                        password: '',\n                        erroInfo: this.state.userData.erroInfo\n                    }});\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    existEmailAndPasswordCorrect(email, password) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.email === email && each.password === password) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    login(event) {\n        event.preventDefault();\n        this.checkUserInfoAndLogin();\n    }\n\n    render() {\n        return (\n            <div className=\"newUser\">\n                <InvalidNewUserView ref={this.invalidNewUserErrorChild} errInfo={this.state.userData.erroInfo}/>\n                <GetPasswordDialogView ref={this.GetPasswordChild}/>\n                <br />\n                <h2 className=\"title\" align=\"center\">Log In</h2>\n                <br />\n                <form className=\"eventForm\" onSubmit={this.login}>\n                    <TextField\n                        required\n                        label=\"User Email\"\n                        margin=\"dense\"\n                        type=\"email\"\n                        className=\"registerText\"\n                        value={this.state.userData.email}\n                        onChange={this.handleEventChange('email')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.userData.password}\n                        onChange={this.handleEventChange('password')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={() => this.ChangeView('/')}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Login\n                    </Button>\n                    <br />\n                    <p className=\"forgetPassword\" onClick={() => this.GetPasswordChild.current.handleOpen()}>Forget password?</p>\n                    <p className=\"forgetPassword\" onClick={() => this.ChangeView('/register')}>Sign Up</p>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}