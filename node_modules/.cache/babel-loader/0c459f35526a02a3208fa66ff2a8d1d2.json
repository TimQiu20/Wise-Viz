{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport GetPasswordDialogView from './GetPasswordDialog';\n/**\n *\n *\n */\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  _createClass(Register, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }]);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.userData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          newUserData: oldData\n        });\n      };\n    };\n\n    _this.handleClickShowPassword = function () {\n      _this.setState({\n        showPassword: !_this.state.showPassword\n      });\n    };\n\n    _this.state = {\n      userData: {\n        email: '',\n        password: '',\n        erroInfo: ''\n      },\n      items: [],\n      showPassword: false\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.existEmailAndPasswordCorrect = _this.existEmailAndPasswordCorrect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.invalidNewUserErrorChild = React.createRef();\n    _this.checkUserInfoAndLogin = _this.checkUserInfoAndLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSuccess = _this.onSuccess.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.GetPasswordChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSuccess\",\n    value: function onSuccess(email, username, password, url) {\n      this.props.onSuccess(email, username, password, url);\n      this.ChangeView('/');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"checkUserInfoAndLogin\",\n    value: function checkUserInfoAndLogin() {\n      var _this2 = this;\n\n      var data = {\n        email: this.state.userData.email.toLowerCase()\n      };\n      var request = new Request('api/user-info/check-email', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (items) {\n        return _this2.setState({\n          items: items\n        });\n      }).then(function (event) {\n        var data = {\n          email: _this2.state.userData.email.toLowerCase(),\n          password: _this2.state.userData.password\n        };\n\n        if (_this2.existEmailAndPasswordCorrect(data.email, data.password)) {\n          _this2.onSuccess(data.email, _this2.state.items[0].userName, _this2.state.items[0].password, _this2.state.items[0].url);\n        } else {\n          var erroInfo = '';\n\n          if (data.userName === '') {\n            erroInfo = 'Email cannot be empty!';\n          } else {\n            erroInfo = 'The email is not exist or the password is incorrect!';\n          }\n\n          _this2.setState({\n            userData: {\n              email: data.email,\n              password: data.password,\n              erroInfo: erroInfo\n            }\n          });\n\n          _this2.invalidNewUserErrorChild.current.handleOpen();\n\n          _this2.setState({\n            userData: {\n              email: '',\n              password: '',\n              erroInfo: _this2.state.userData.erroInfo\n            }\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"existEmailAndPasswordCorrect\",\n    value: function existEmailAndPasswordCorrect(email, password) {\n      var exist = false;\n\n      for (var itemInd in this.state.items) {\n        var each = this.state.items[itemInd];\n\n        if (each.email === email && each.password === password) {\n          exist = true;\n        }\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"login\",\n    value: function login(event) {\n      event.preventDefault();\n      this.checkUserInfoAndLogin();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"newUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(InvalidNewUserView, {\n        ref: this.invalidNewUserErrorChild,\n        errInfo: this.state.userData.erroInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(GetPasswordDialogView, {\n        ref: this.GetPasswordChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"User Email\",\n        margin: \"dense\",\n        type: \"email\",\n        className: \"registerText\",\n        value: this.state.userData.email,\n        onChange: this.handleEventChange('email'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Password\",\n        type: this.state.showPassword ? 'text' : 'password',\n        margin: \"dense\",\n        className: \"registerText\",\n        value: this.state.userData.password,\n        onChange: this.handleEventChange('password'),\n        InputLabelProps: {\n          shrink: true\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.ChangeView('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"forgetPassword\",\n        onClick: function onClick() {\n          return _this3.GetPasswordChild.current.handleOpen();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Forget password?\"), React.createElement(\"p\", {\n        className: \"forgetPassword\",\n        onClick: function onClick() {\n          return _this3.ChangeView('/register');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport { Register as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\Wise-viz\\src\\components\\Login.js"],"names":["React","IconButton","Button","TextField","navigate","InvalidNewUserView","InputAdornment","Visibility","VisibilityOff","GetPasswordDialogView","Register","page","props","handleEventChange","field","event","oldData","state","userData","target","value","setState","newUserData","handleClickShowPassword","showPassword","email","password","erroInfo","items","login","bind","existEmailAndPasswordCorrect","invalidNewUserErrorChild","createRef","checkUserInfoAndLogin","onSuccess","GetPasswordChild","username","url","ChangeView","data","toLowerCase","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","userName","current","handleOpen","catch","err","console","log","exist","itemInd","each","preventDefault","shrink","endAdornment","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport GetPasswordDialogView from './GetPasswordDialog';\n\n/**\n *\n *\n */\nexport default class Register extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                email: '',\n                password: '',\n                erroInfo: ''\n            },\n            items: [],\n            showPassword: false,\n        };\n        this.login = this.login.bind(this);\n        this.existEmailAndPasswordCorrect = this.existEmailAndPasswordCorrect.bind(this);\n        this.invalidNewUserErrorChild = React.createRef();\n        this.checkUserInfoAndLogin = this.checkUserInfoAndLogin.bind(this);\n        this.onSuccess = this.onSuccess.bind(this);\n        this.GetPasswordChild = React.createRef();\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.userData;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    onSuccess(email, username, password, url) {\n        this.props.onSuccess(email, username, password, url);\n        this.ChangeView('/');\n    }\n\n    componentDidMount() {\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    checkUserInfoAndLogin() {\n        let data = {\n            email: this.state.userData.email.toLowerCase(),\n        };\n        let request = new Request('api/user-info/check-email', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(items => this.setState({items}))\n            .then((event) => {\n                let data = {\n                    email: this.state.userData.email.toLowerCase(),\n                    password: this.state.userData.password\n                };\n                if (this.existEmailAndPasswordCorrect(data.email, data.password)) {\n                    this.onSuccess(data.email, this.state.items[0].userName, this.state.items[0].password, this.state.items[0].url);\n                } else {\n                    let erroInfo = '';\n                    if (data.userName === '') {\n                        erroInfo = 'Email cannot be empty!';\n                    }\n                    else {\n                        erroInfo = 'The email is not exist or the password is incorrect!';\n                    }\n                    this.setState({ userData: {\n                        email: data.email,\n                        password: data.password,\n                        erroInfo: erroInfo\n                    }});\n                    this.invalidNewUserErrorChild.current.handleOpen();\n                    this.setState({ userData: {\n                        email: '',\n                        password: '',\n                        erroInfo: this.state.userData.erroInfo\n                    }});\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    existEmailAndPasswordCorrect(email, password) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.email === email && each.password === password) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    login(event) {\n        event.preventDefault();\n        this.checkUserInfoAndLogin();\n    }\n\n    render() {\n        return (\n            <div className=\"newUser\">\n                <InvalidNewUserView ref={this.invalidNewUserErrorChild} errInfo={this.state.userData.erroInfo}/>\n                <GetPasswordDialogView ref={this.GetPasswordChild}/>\n                <br />\n                <h2 className=\"title\" align=\"center\">Log In</h2>\n                <br />\n                <form className=\"eventForm\" onSubmit={this.login}>\n                    <TextField\n                        required\n                        label=\"User Email\"\n                        margin=\"dense\"\n                        type=\"email\"\n                        className=\"registerText\"\n                        value={this.state.userData.email}\n                        onChange={this.handleEventChange('email')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.userData.password}\n                        onChange={this.handleEventChange('password')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={() => this.ChangeView('/')}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Login\n                    </Button>\n                    <br />\n                    <p className=\"forgetPassword\" onClick={() => this.GetPasswordChild.current.handleOpen()}>Forget password?</p>\n                    <p className=\"forgetPassword\" onClick={() => this.ChangeView('/register')}>Sign Up</p>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}