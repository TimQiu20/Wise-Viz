{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\Wise-viz\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport RegisterSucceedView from './RegisterSucceed';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n/**\n *\n *\n */\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  _createClass(Register, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }]);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.newUserData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          newUserData: oldData\n        });\n      };\n    };\n\n    _this.handleClickShowPassword = function () {\n      _this.setState({\n        showPassword: !_this.state.showPassword\n      });\n    };\n\n    _this.state = {\n      newUserData: {\n        userName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        erroInfo: ''\n      },\n      items: [],\n      showPassword: false\n    };\n    _this.addNewAccount = _this.addNewAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkUserInfoAndAdd = _this.checkUserInfoAndAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.existUsername = _this.existUsername.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.existEmail = _this.existEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.invalidNewUserErrorChild = React.createRef();\n    _this.registerSucceedChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // go to database to check whether the account has been registered and\n    // go to check whether the password and reentered password are same\n    // if the new account information are all valid, then put the info into DB.\n\n  }, {\n    key: \"checkUserInfoAndAdd\",\n    value: function checkUserInfoAndAdd() {\n      var _this2 = this;\n\n      var data = {\n        userName: this.state.newUserData.userName,\n        email: this.state.newUserData.email\n      };\n      var request = new Request('api/user-info/check-username-email-unique', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(data)\n      });\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (items) {\n        return _this2.setState({\n          items: items\n        });\n      }).then(function (event) {\n        var data = {\n          userID: Math.random().toString(36).substr(2, 9),\n          userName: _this2.state.newUserData.userName,\n          password: _this2.state.newUserData.password,\n          email: _this2.state.newUserData.email.toLowerCase()\n        };\n        var confirmPassword = _this2.state.newUserData.confirmPassword;\n\n        if (confirmPassword === data.password && !_this2.existUsername(data.userName) && !_this2.existEmail(data.email)) {\n          var _request = new Request('api/user-info/post', {\n            method: 'POST',\n            headers: new Headers({\n              'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify(data)\n          });\n\n          fetch(_request).then(function (response) {\n            response.json().then(function (data) {});\n          });\n\n          _this2.registerSucceedChild.current.handleOpen();\n        } else {\n          var erroInfo = '';\n\n          if (data.userName === '') {\n            erroInfo = 'Username cannot be empty!';\n          } else if (_this2.existUsername(data.userName)) {\n            erroInfo = 'The username is registered by the other person!';\n          } else if (_this2.existEmail(data.email)) {\n            erroInfo = 'The email is used by the other person!';\n          } else if (data.password !== data.confirmPassword) {\n            erroInfo = 'The password and the reentered Password are different!';\n          }\n\n          _this2.setState({\n            newUserData: {\n              userName: data.userName,\n              password: data.password,\n              confirmPassword: confirmPassword,\n              email: data.email,\n              erroInfo: erroInfo\n            }\n          });\n\n          _this2.invalidNewUserErrorChild.current.handleOpen();\n\n          _this2.setState({\n            newUserData: {\n              userName: '',\n              password: '',\n              confirmPassword: '',\n              email: '',\n              erroInfo: _this2.state.newUserData.erroInfo\n            }\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"existUsername\",\n    value: function existUsername(username) {\n      var exist = false;\n\n      for (var itemInd in this.state.items) {\n        var each = this.state.items[itemInd];\n\n        if (each.userName === username) {\n          exist = true;\n        }\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"existEmail\",\n    value: function existEmail(email) {\n      var exist = false;\n\n      for (var itemInd in this.state.items) {\n        var each = this.state.items[itemInd];\n\n        if (each.email === email) {\n          exist = true;\n        }\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"addNewAccount\",\n    value: function addNewAccount(event) {\n      event.preventDefault();\n      this.checkUserInfoAndAdd();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"newUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(InvalidNewUserView, {\n        ref: this.invalidNewUserErrorChild,\n        errInfo: this.state.newUserData.erroInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(RegisterSucceedView, {\n        ref: this.registerSucceedChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"title\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"New User\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.addNewAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"User Name\",\n        margin: \"dense\",\n        className: \"registerText\",\n        value: this.state.newUserData.userName,\n        onChange: this.handleEventChange('userName'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Email\",\n        margin: \"dense\",\n        className: \"registerText\",\n        type: \"email\",\n        value: this.state.newUserData.email,\n        onChange: this.handleEventChange('email'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Password\",\n        type: this.state.showPassword ? 'text' : 'password',\n        margin: \"dense\",\n        className: \"registerText\",\n        value: this.state.newUserData.password,\n        onChange: this.handleEventChange('password'),\n        InputLabelProps: {\n          shrink: true\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Confirm Password\",\n        type: this.state.showPassword ? 'text' : 'password',\n        margin: \"dense\",\n        className: \"registerText\",\n        value: this.state.newUserData.confirmPassword,\n        onChange: this.handleEventChange('confirmPassword'),\n        InputLabelProps: {\n          shrink: true\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.ChangeView('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport { Register as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\Wise-viz\\src\\components\\Register.js"],"names":["React","IconButton","Button","TextField","navigate","InvalidNewUserView","RegisterSucceedView","InputAdornment","Visibility","VisibilityOff","Register","page","props","handleEventChange","field","event","oldData","state","newUserData","target","value","setState","handleClickShowPassword","showPassword","userName","email","password","confirmPassword","erroInfo","items","addNewAccount","bind","checkUserInfoAndAdd","existUsername","existEmail","invalidNewUserErrorChild","createRef","registerSucceedChild","data","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","userID","Math","random","toString","substr","toLowerCase","current","handleOpen","catch","err","console","log","username","exist","itemInd","each","preventDefault","shrink","endAdornment","ChangeView","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IconButton, Button, TextField } from '@material-ui/core';\nimport './component_style/Register.css';\nimport { navigate } from 'react-mini-router';\nimport InvalidNewUserView from './InvalidNewUserError';\nimport RegisterSucceedView from './RegisterSucceed';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n/**\n *\n *\n */\nexport default class Register extends React.Component {\n    ChangeView(page) {\n        navigate(page);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newUserData: {\n                userName: '',\n                email: '',\n                password: '',\n                confirmPassword: '',\n                erroInfo: ''\n            },\n            items: [],\n            showPassword: false,\n        };\n        this.addNewAccount = this.addNewAccount.bind(this);\n        this.checkUserInfoAndAdd = this.checkUserInfoAndAdd.bind(this);\n        this.existUsername = this.existUsername.bind(this);\n        this.existEmail = this.existEmail.bind(this);\n        this.invalidNewUserErrorChild = React.createRef();\n        this.registerSucceedChild = React.createRef();\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.newUserData;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    handleClickShowPassword = () => {\n        this.setState({ showPassword: !this.state.showPassword });\n    };\n\n    componentDidMount() {\n    }\n\n    // go to database to check whether the account has been registered and\n    // go to check whether the password and reentered password are same\n    // if the new account information are all valid, then put the info into DB.\n    checkUserInfoAndAdd() {\n        let data = {\n            userName: this.state.newUserData.userName,\n            email: this.state.newUserData.email\n        };\n        let request = new Request('api/user-info/check-username-email-unique', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        fetch(request)\n            .then(response => response.json())\n            .then(items => this.setState({items}))\n            .then((event) => {\n                let data = {\n                    userID: Math.random().toString(36).substr(2, 9),\n                    userName: this.state.newUserData.userName,\n                    password: this.state.newUserData.password,\n                    email: this.state.newUserData.email.toLowerCase(),\n                };\n                let confirmPassword = this.state.newUserData.confirmPassword;\n                if (confirmPassword === data.password && !this.existUsername(data.userName)\n                    && !this.existEmail(data.email)) {\n                    let request = new Request('api/user-info/post', {\n                        method: 'POST',\n                        headers: new Headers({ 'Content-Type': 'application/json' }),\n                        body: JSON.stringify(data)\n                    });\n\n                    fetch(request)\n                        .then(function(response) {\n                            response.json().then(function(data) {\n                            })\n                    });\n                    this.registerSucceedChild.current.handleOpen();\n                } else {\n                    let erroInfo = '';\n                    if (data.userName === '') {\n                        erroInfo = 'Username cannot be empty!';\n                    }\n                    else if (this.existUsername(data.userName)) {\n                        erroInfo = 'The username is registered by the other person!';\n                    }\n                    else if (this.existEmail(data.email)) {\n                        erroInfo = 'The email is used by the other person!';\n                    }\n                    else if (data.password !== data.confirmPassword) {\n                        erroInfo = 'The password and the reentered Password are different!';\n                    }\n                    this.setState({ newUserData: {\n                        userName: data.userName,\n                        password: data.password,\n                        confirmPassword: confirmPassword,\n                        email: data.email,\n                        erroInfo: erroInfo\n                    }});\n                    this.invalidNewUserErrorChild.current.handleOpen();\n                    this.setState({ newUserData: {\n                        userName: '',\n                        password: '',\n                        confirmPassword: '',\n                        email: '',\n                        erroInfo: this.state.newUserData.erroInfo\n                    }});\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    existUsername(username) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.userName === username) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    existEmail(email) {\n        let exist = false;\n        for (let itemInd in this.state.items) {\n            let each = this.state.items[itemInd];\n            if (each.email === email) {\n                exist = true;\n            }\n        }\n        return exist;\n    }\n\n    addNewAccount(event) {\n        event.preventDefault();\n        this.checkUserInfoAndAdd();\n    }\n\n    render() {\n        return (\n            <div className=\"newUser\">\n                <br />\n                <InvalidNewUserView ref={this.invalidNewUserErrorChild} errInfo={this.state.newUserData.erroInfo}/>\n                <RegisterSucceedView ref={this.registerSucceedChild}/>\n                <h2 className=\"title\" align=\"center\">New User</h2>\n                <br />\n                <form className=\"eventForm\" onSubmit={this.addNewAccount}>\n                    <TextField\n                        required\n                        label=\"User Name\"\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.userName}\n                        onChange={this.handleEventChange('userName')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Email\"\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        type=\"email\"\n                        value={this.state.newUserData.email}\n                        onChange={this.handleEventChange('email')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.password}\n                        onChange={this.handleEventChange('password')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Confirm Password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        margin=\"dense\"\n                        className=\"registerText\"\n                        value={this.state.newUserData.confirmPassword}\n                        onChange={this.handleEventChange('confirmPassword')}\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                    >\n                                        {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                          ),\n                        }}\n                    />\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={() => this.ChangeView('/')}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Register\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}