{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\components\\\\Comment.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/PostContent.css';\n/**\n *\n *\n */\n\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEventChange = field => event => {\n      const oldData = this.state;\n      oldData[field] = event.target.value;\n      this.setState({\n        newUserData: oldData\n      });\n    };\n\n    this.state = {\n      content: '',\n      user: this.props.user ? this.props.user.username : null\n    };\n    this.post = this.post.bind(this);\n  }\n\n  post() {\n    let date = new Date();\n    let data = {\n      id: this.props.clickedPost.postID,\n      commentID: Math.random().toString(36).substr(2, 9),\n      content: this.state.content,\n      time: date.toISOString().slice(0, 19).replace('T', ' '),\n      user: this.state.user\n    };\n    let request = new Request('/api/comment-info/post', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    fetch(request).then(function (response) {\n      response.json().then(function (data) {});\n    });\n    this.props.reverseState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"commentHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Content:\"), React.createElement(\"textarea\", {\n      name: \"message\",\n      className: \"textarea\",\n      require: true,\n      rows: \"10\",\n      cols: \"30\",\n      wrap: \"soft\",\n      value: this.state.postContent,\n      onChange: this.handleEventChange('content'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"postButtons\",\n      onClick: () => this.props.reverseState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"postButtons\",\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Submit Comment\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\components\\Comment.js"],"names":["React","Button","TextField","Comment","Component","constructor","props","handleEventChange","field","event","oldData","state","target","value","setState","newUserData","content","user","username","post","bind","date","Date","data","id","clickedPost","postID","commentID","Math","random","toString","substr","time","toISOString","slice","replace","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","reverseState","render","postContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './component_style/PostContent.css';\n\n/**\n *\n *\n */\nexport default class Comment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            user: this.props.user ? this.props.user.username : null,\n        }\n        this.post = this.post.bind(this);\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state;\n        oldData[field] = event.target.value;\n        this.setState({\n            newUserData: oldData,\n        });\n    }\n\n    post() {\n        let date = new Date();\n        let data = {\n            id: this.props.clickedPost.postID,\n            commentID: Math.random().toString(36).substr(2, 9),\n            content: this.state.content,\n            time: date.toISOString().slice(0, 19).replace('T', ' '),\n            user: this.state.user,\n        };\n        let request = new Request('/api/comment-info/post', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        fetch(request)\n            .then(function(response) {\n                response.json().then(function(data) {\n                })\n        });\n        this.props.reverseState();\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <form className=\"grid\">\n                    <fieldset>\n                    <h2 className=\"commentHeader\">Content:</h2>\n                    <textarea\n                        name=\"message\"\n                        className=\"textarea\"\n                        require={true}\n                        rows=\"10\"\n                        cols=\"30\"\n                        wrap=\"soft\"\n                        value={this.state.postContent}\n                        onChange={this.handleEventChange('content')}\n                    >\n                    </textarea>\n                    <br/><br/>\n                    <Button variant=\"contained\" color=\"secondary\" className=\"postButtons\" onClick={() => this.props.reverseState()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"primary\" className=\"postButtons\" onClick={this.post}>Submit Comment</Button>\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}