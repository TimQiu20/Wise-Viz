{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\routing\\\\routing.js\";\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Register from '../components/Register';\nimport Login from '../components/Login';\nimport User from '../components/User';\nimport PostContent from '../components/PostContent';\n\nvar RouterMixin = require('react-mini-router').RouterMixin;\n/**\n * RoutedApp handles routing between each of the main views as well\n * as error handling when a non-existant page is queried\n */\n\n\nvar RoutedApp = createReactClass({\n  displayName: \"RoutedApp\",\n\n  getInitialState() {\n    return {\n      loggedIn: this.props.loggedIn\n    };\n  },\n\n  mixins: [RouterMixin],\n  routes: {\n    '/': 'home',\n    '/register': 'register',\n    '/login': 'login',\n    '/user': 'user',\n    '/postContent': 'postContent'\n  },\n\n  render() {\n    return this.renderCurrentRoute();\n  },\n\n  home() {\n    return React.createElement(MainPage, {\n      loggedIn: this.props.loggedIn,\n      onSuccess: this.props.onSuccess,\n      logout: this.props.logout,\n      user: this.props.user,\n      updateClickedUsername: this.props.updateClickedUsername,\n      clickedUsername: this.props.clickedUsername,\n      clickedPost: this.props.clickedPost,\n      updateClickedPost: this.props.updateClickedPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  },\n\n  register() {\n    return React.createElement(Register, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  },\n\n  login() {\n    return React.createElement(Login, {\n      loggedIn: this.props.loggedIn,\n      onSuccess: this.props.onSuccess,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  },\n\n  user() {\n    return React.createElement(User, {\n      logout: this.props.logout,\n      user: this.props.user,\n      onSuccess: this.props.onSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  },\n\n  postContent() {\n    return React.createElement(PostContent, {\n      clickedPost: this.props.clickedPost,\n      updateClickedPost: this.props.updateClickedPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  },\n\n  notFound(path) {\n    return React.createElement(\"div\", {\n      className: \"not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Page Not Found: \", path);\n  }\n\n});\nexport default RoutedApp;","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\routing\\routing.js"],"names":["React","createReactClass","MainPage","Register","Login","User","PostContent","RouterMixin","require","RoutedApp","getInitialState","loggedIn","props","mixins","routes","render","renderCurrentRoute","home","onSuccess","logout","user","updateClickedUsername","clickedUsername","clickedPost","updateClickedPost","register","login","postContent","notFound","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BD,WAA/C;AAEA;;;;;;AAIA,IAAIE,SAAS,GAAGR,gBAAgB,CAAC;AAAA;;AAE7BS,EAAAA,eAAe,GAAG;AACd,WAAO;AAAEC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD;AAAvB,KAAP;AACH,GAJ4B;;AAM7BE,EAAAA,MAAM,EAAE,CAACN,WAAD,CANqB;AAQ7BO,EAAAA,MAAM,EAAE;AACJ,SAAK,MADD;AAEJ,iBAAa,UAFT;AAGJ,cAAU,OAHN;AAIJ,aAAS,MAJL;AAKJ,oBAAgB;AALZ,GARqB;;AAgB7BC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKC,kBAAL,EAAP;AACH,GAlB4B;;AAoB7BC,EAAAA,IAAI,GAAG;AACH,WACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWM,SAF1B;AAGI,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAHvB;AAII,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,IAJrB;AAKI,MAAA,qBAAqB,EAAE,KAAKR,KAAL,CAAWS,qBALtC;AAMI,MAAA,eAAe,EAAE,KAAKT,KAAL,CAAWU,eANhC;AAOI,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW,WAP5B;AAQI,MAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWY,iBARlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAYH,GAjC4B;;AAmC7BC,EAAAA,QAAQ,GAAG;AACP,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH,GAxC4B;;AA0C7BC,EAAAA,KAAK,GAAG;AACJ,WACI,oBAAC,KAAD;AACI,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWD,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWM,SAF1B;AAGI,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWQ,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GAlD4B;;AAoD7BA,EAAAA,IAAI,GAAG;AACH,WACI,oBAAC,IAAD;AACI,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWO,MADvB;AAEI,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,IAFrB;AAGI,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWM,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GA5D4B;;AA8D7BS,EAAAA,WAAW,GAAG;AACV,WACI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAE,KAAKf,KAAL,CAAWW,WAD5B;AAEI,MAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWY,iBAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GArE4B;;AAuE7BI,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4CA,IAA5C,CAAP;AACH;;AAzE4B,CAAD,CAAhC;AA4EA,eAAepB,SAAf","sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Register from '../components/Register';\nimport Login from '../components/Login';\nimport User from '../components/User';\nimport PostContent from '../components/PostContent';\n\nvar RouterMixin = require('react-mini-router').RouterMixin;\n\n/**\n * RoutedApp handles routing between each of the main views as well\n * as error handling when a non-existant page is queried\n */\nvar RoutedApp = createReactClass({\n\n    getInitialState() {\n        return { loggedIn: this.props.loggedIn};\n    },\n\n    mixins: [RouterMixin],\n\n    routes: {\n        '/': 'home',\n        '/register': 'register',\n        '/login': 'login',\n        '/user': 'user',\n        '/postContent': 'postContent',\n    },\n\n    render() {\n        return this.renderCurrentRoute();\n    },\n\n    home() {\n        return (\n            <MainPage\n                loggedIn={this.props.loggedIn}\n                onSuccess={this.props.onSuccess}\n                logout={this.props.logout}\n                user={this.props.user}\n                updateClickedUsername={this.props.updateClickedUsername}\n                clickedUsername={this.props.clickedUsername}\n                clickedPost={this.props.clickedPost}\n                updateClickedPost={this.props.updateClickedPost}\n            />\n        );\n    },\n\n    register() {\n        return (\n            <Register\n            />\n        );\n    },\n\n    login() {\n        return (\n            <Login\n                loggedIn={this.props.loggedIn}\n                onSuccess={this.props.onSuccess}\n                user={this.props.user}\n            />\n        );\n    },\n\n    user() {\n        return (\n            <User\n                logout={this.props.logout}\n                user={this.props.user}\n                onSuccess={this.props.onSuccess}\n            />\n        );\n    },\n\n    postContent() {\n        return (\n            <PostContent\n                clickedPost={this.props.clickedPost}\n                updateClickedPost={this.props.updateClickedPost}\n            />\n        )\n    },\n\n    notFound(path) {\n        return <div className=\"not-found\">Page Not Found: {path}</div>;\n    }\n});\n\nexport default RoutedApp;"]},"metadata":{},"sourceType":"module"}