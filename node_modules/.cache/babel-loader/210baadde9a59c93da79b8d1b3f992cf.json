{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme';\nimport RoutedApp from './routing/routing';\nimport './App.css';\n/**\n * 'App' serves as a colleciton point of lower components before they\n * are sent off to rendering in index.js\n * This gives us a place to inject routing and theming as well as place\n * components that stay constant throughout the experience, such as the\n * NavBar\n*/\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      user: '',\n      clickedUsername: '',\n      clickedPost: [],\n      currentPageNum: 1\n    };\n  }\n\n  componentDidMount() {\n    const user = sessionStorage.getItem('email') ? {\n      email: sessionStorage.getItem('email'),\n      username: sessionStorage.getItem('username'),\n      password: sessionStorage.getItem('password'),\n      url: sessionStorage.getItem('url')\n    } : null;\n    this.setState({\n      loggedIn: user ? true : false,\n      user\n    });\n  }\n\n  updateCurrentPageNum(currentPageNum) {\n    this.setState({\n      currentPageNum: currentPageNum\n    });\n    sessionStorage.setItem('currentPageNum', currentPageNum);\n  }\n\n  updateClickedUsername(username) {\n    this.setState({\n      clickedUsername: username\n    });\n    sessionStorage.setItem('clickedUsername', username);\n  }\n\n  updateClickedPost(post) {\n    this.setState({\n      clickedPost: post\n    });\n    sessionStorage.setItem('clickedPost', post);\n  }\n\n  onSuccess(userEmail, username, password, url) {\n    this.setState({\n      loggedIn: true,\n      user: {\n        email: userEmail,\n        username: username,\n        password: password,\n        url: url\n      }\n    });\n    sessionStorage.setItem('email', userEmail);\n    sessionStorage.setItem('username', username);\n    sessionStorage.setItem('password', password);\n    sessionStorage.setItem('url', url);\n  }\n\n  logout() {\n    this.setState({\n      loggedIn: false,\n      user: null\n    });\n    sessionStorage.removeItem('email');\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('password');\n    sessionStorage.removeItem('url');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      updateClickedUsername: this.updateClickedUsername.bind(this),\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(RoutedApp, {\n      loggedIn: this.loggedIn,\n      onSuccess: this.onSuccess.bind(this),\n      logout: this.logout.bind(this),\n      user: this.state.user,\n      history: true,\n      clickedUsername: this.state.clickedUsername,\n      updateClickedUsername: this.updateClickedUsername.bind(this),\n      clickedPost: this.state.clickedPost,\n      updateClickedPost: this.updateClickedPost.bind(this),\n      currentPageNum: this.state.currentPageNum,\n      updateCurrentPageNum: this.updateCurrentPageNum.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\App.js"],"names":["React","Component","NavBar","MuiThemeProvider","theme","RoutedApp","App","constructor","state","loggedIn","user","clickedUsername","clickedPost","currentPageNum","componentDidMount","sessionStorage","getItem","email","username","password","url","setState","updateCurrentPageNum","setItem","updateClickedUsername","updateClickedPost","post","onSuccess","userEmail","logout","removeItem","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme';\nimport RoutedApp from './routing/routing';\nimport './App.css';\n\n/**\n * 'App' serves as a colleciton point of lower components before they\n * are sent off to rendering in index.js\n * This gives us a place to inject routing and theming as well as place\n * components that stay constant throughout the experience, such as the\n * NavBar\n*/\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: false,\n            user: '',\n            clickedUsername: '',\n            clickedPost: [],\n            currentPageNum: 1,\n        };\n    }\n\n    componentDidMount() {\n        const user = sessionStorage.getItem('email') ? {\n            email: sessionStorage.getItem('email'),\n            username: sessionStorage.getItem('username'),\n            password: sessionStorage.getItem('password'),\n            url: sessionStorage.getItem('url')\n        } : null;\n        this.setState({\n            loggedIn: user ? true : false,\n            user\n        });\n    }\n\n    updateCurrentPageNum(currentPageNum) {\n        this.setState({\n            currentPageNum: currentPageNum,\n        });\n        sessionStorage.setItem('currentPageNum', currentPageNum);\n    }\n\n    updateClickedUsername(username) {\n        this.setState({\n            clickedUsername: username,\n        });\n        sessionStorage.setItem('clickedUsername', username);\n    }\n\n    updateClickedPost(post) {\n        this.setState({\n            clickedPost: post,\n        });\n        sessionStorage.setItem('clickedPost', post);\n    }\n\n    onSuccess(userEmail, username, password, url) {\n        this.setState({\n            loggedIn: true,\n            user: {\n                email: userEmail,\n                username: username,\n                password: password,\n                url: url,\n            }\n        });\n        sessionStorage.setItem('email', userEmail);\n        sessionStorage.setItem('username', username);\n        sessionStorage.setItem('password', password);\n        sessionStorage.setItem('url', url);\n    }\n\n    logout() {\n        this.setState({\n            loggedIn: false,\n            user: null\n        });\n        sessionStorage.removeItem('email');\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n        sessionStorage.removeItem('url');\n    }\n\n    render() {\n        return (\n            <div className=\"background\">\n                <MuiThemeProvider theme={theme}>\n                    <div>\n                        <NavBar updateClickedUsername={this.updateClickedUsername.bind(this)} user={this.state.user}/>\n                        <RoutedApp\n                            loggedIn={this.loggedIn}\n                            onSuccess={this.onSuccess.bind(this)}\n                            logout={this.logout.bind(this)}\n                            user={this.state.user}\n                            history={true}\n                            clickedUsername={this.state.clickedUsername}\n                            updateClickedUsername={this.updateClickedUsername.bind(this)}\n                            clickedPost={this.state.clickedPost}\n                            updateClickedPost={this.updateClickedPost.bind(this)}\n                            currentPageNum={this.state.currentPageNum}\n                            updateCurrentPageNum={this.updateCurrentPageNum.bind(this)}\n                        />\n                    </div>\n                </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}