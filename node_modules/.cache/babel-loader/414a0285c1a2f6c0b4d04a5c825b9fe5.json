{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ting\\\\Desktop\\\\job seeking\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme';\nimport RoutedApp from './routing/routing';\nimport './App.css';\n/**\n * 'App' serves as a colleciton point of lower components before they\n * are sent off to rendering in index.js\n * This gives us a place to inject routing and theming as well as place\n * components that stay constant throughout the experience, such as the\n * NavBar\n*/\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      loggedIn: false,\n      user: '',\n      clickedUsername: '',\n      clickedPost: [],\n      currentPageNum: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = sessionStorage.getItem('email') ? {\n        email: sessionStorage.getItem('email'),\n        username: sessionStorage.getItem('username'),\n        password: sessionStorage.getItem('password'),\n        url: sessionStorage.getItem('url')\n      } : null;\n      this.setState({\n        loggedIn: user ? true : false,\n        user: user\n      });\n    }\n  }, {\n    key: \"updateCurrentPageNum\",\n    value: function updateCurrentPageNum(currentPageNum) {\n      this.setState({\n        currentPageNum: currentPageNum\n      });\n      sessionStorage.setItem('currentPageNum', currentPageNum);\n    }\n  }, {\n    key: \"updateClickedUsername\",\n    value: function updateClickedUsername(username) {\n      this.setState({\n        clickedUsername: username\n      });\n      sessionStorage.setItem('clickedUsername', username);\n    }\n  }, {\n    key: \"updateClickedPost\",\n    value: function updateClickedPost(post) {\n      this.setState({\n        clickedPost: post\n      });\n      sessionStorage.setItem('clickedPost', post);\n    }\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess(userEmail, username, password, url) {\n      this.setState({\n        loggedIn: true,\n        user: {\n          email: userEmail,\n          username: username,\n          password: password,\n          url: url\n        }\n      });\n      sessionStorage.setItem('email', userEmail);\n      sessionStorage.setItem('username', username);\n      sessionStorage.setItem('password', password);\n      sessionStorage.setItem('url', url);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.setState({\n        loggedIn: false,\n        user: null\n      });\n      sessionStorage.removeItem('email');\n      sessionStorage.removeItem('username');\n      sessionStorage.removeItem('password');\n      sessionStorage.removeItem('url');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        updateClickedUsername: this.updateClickedUsername.bind(this),\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(RoutedApp, {\n        loggedIn: this.loggedIn,\n        onSuccess: this.onSuccess.bind(this),\n        logout: this.logout.bind(this),\n        user: this.state.user,\n        history: true,\n        clickedUsername: this.state.clickedUsername,\n        updateClickedUsername: this.updateClickedUsername.bind(this),\n        clickedPost: this.state.clickedPost,\n        updateClickedPost: this.updateClickedPost.bind(this),\n        currentPageNum: this.state.currentPageNum,\n        updateCurrentPageNum: this.updateCurrentPageNum.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:\\Users\\Ting\\Desktop\\job seeking\\my-app\\src\\App.js"],"names":["React","Component","NavBar","MuiThemeProvider","theme","RoutedApp","App","state","loggedIn","user","clickedUsername","clickedPost","currentPageNum","sessionStorage","getItem","email","username","password","url","setState","setItem","post","userEmail","removeItem","updateClickedUsername","bind","onSuccess","logout","updateClickedPost","updateCurrentPageNum"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme';\nimport RoutedApp from './routing/routing';\nimport './App.css';\n\n/**\n * 'App' serves as a colleciton point of lower components before they\n * are sent off to rendering in index.js\n * This gives us a place to inject routing and theming as well as place\n * components that stay constant throughout the experience, such as the\n * NavBar\n*/\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: false,\n            user: '',\n            clickedUsername: '',\n            clickedPost: [],\n            currentPageNum: 1,\n        };\n    }\n\n    componentDidMount() {\n        const user = sessionStorage.getItem('email') ? {\n            email: sessionStorage.getItem('email'),\n            username: sessionStorage.getItem('username'),\n            password: sessionStorage.getItem('password'),\n            url: sessionStorage.getItem('url')\n        } : null;\n        this.setState({\n            loggedIn: user ? true : false,\n            user\n        });\n    }\n\n    updateCurrentPageNum(currentPageNum) {\n        this.setState({\n            currentPageNum: currentPageNum,\n        });\n        sessionStorage.setItem('currentPageNum', currentPageNum);\n    }\n\n    updateClickedUsername(username) {\n        this.setState({\n            clickedUsername: username,\n        });\n        sessionStorage.setItem('clickedUsername', username);\n    }\n\n    updateClickedPost(post) {\n        this.setState({\n            clickedPost: post,\n        });\n        sessionStorage.setItem('clickedPost', post);\n    }\n\n    onSuccess(userEmail, username, password, url) {\n        this.setState({\n            loggedIn: true,\n            user: {\n                email: userEmail,\n                username: username,\n                password: password,\n                url: url,\n            }\n        });\n        sessionStorage.setItem('email', userEmail);\n        sessionStorage.setItem('username', username);\n        sessionStorage.setItem('password', password);\n        sessionStorage.setItem('url', url);\n    }\n\n    logout() {\n        this.setState({\n            loggedIn: false,\n            user: null\n        });\n        sessionStorage.removeItem('email');\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n        sessionStorage.removeItem('url');\n    }\n\n    render() {\n        return (\n            <div className=\"background\">\n                <MuiThemeProvider theme={theme}>\n                    <div>\n                        <NavBar updateClickedUsername={this.updateClickedUsername.bind(this)} user={this.state.user}/>\n                        <RoutedApp\n                            loggedIn={this.loggedIn}\n                            onSuccess={this.onSuccess.bind(this)}\n                            logout={this.logout.bind(this)}\n                            user={this.state.user}\n                            history={true}\n                            clickedUsername={this.state.clickedUsername}\n                            updateClickedUsername={this.updateClickedUsername.bind(this)}\n                            clickedPost={this.state.clickedPost}\n                            updateClickedPost={this.updateClickedPost.bind(this)}\n                            currentPageNum={this.state.currentPageNum}\n                            updateCurrentPageNum={this.updateCurrentPageNum.bind(this)}\n                        />\n                    </div>\n                </MuiThemeProvider>\n            </div>\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}